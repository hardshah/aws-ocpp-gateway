{
  "author": {
    "name": "Amazon Web Services",
    "organization": true,
    "roles": [
      "author"
    ],
    "url": "https://aws.amazon.com"
  },
  "bundled": {
    "case": "1.6.3"
  },
  "dependencies": {
    "@aws-cdk/aws-iot-alpha": "2.130.0-alpha.0",
    "@aws-cdk/aws-iotevents-alpha": "2.130.0-alpha.0",
    "@aws-cdk/aws-kinesisfirehose-alpha": "2.130.0-alpha.0",
    "@aws-cdk/aws-kinesisfirehose-destinations-alpha": "2.130.0-alpha.0",
    "aws-cdk-lib": "^2.130.0",
    "constructs": "^10.0.0"
  },
  "dependencyClosure": {
    "@aws-cdk/asset-awscli-v1": {
      "targets": {
        "dotnet": {
          "namespace": "Amazon.CDK.Asset.AwsCliV1",
          "packageId": "Amazon.CDK.Asset.AwsCliV1"
        },
        "go": {
          "moduleName": "github.com/cdklabs/awscdk-asset-awscli-go",
          "packageName": "awscliv1"
        },
        "java": {
          "maven": {
            "artifactId": "cdk-asset-awscli-v1",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.cdk.asset.awscli.v1"
        },
        "js": {
          "npm": "@aws-cdk/asset-awscli-v1"
        },
        "python": {
          "distName": "aws-cdk.asset-awscli-v1",
          "module": "aws_cdk.asset_awscli_v1"
        }
      }
    },
    "@aws-cdk/asset-kubectl-v20": {
      "targets": {
        "dotnet": {
          "namespace": "Amazon.CDK.Asset.KubectlV20",
          "packageId": "Amazon.CDK.Asset.KubectlV20"
        },
        "go": {
          "moduleName": "github.com/cdklabs/awscdk-asset-kubectl-go",
          "packageName": "kubectlv20"
        },
        "java": {
          "maven": {
            "artifactId": "cdk-asset-kubectl-v20",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.cdk.asset.kubectl.v20"
        },
        "js": {
          "npm": "@aws-cdk/asset-kubectl-v20"
        },
        "python": {
          "distName": "aws-cdk.asset-kubectl-v20",
          "module": "aws_cdk.asset_kubectl_v20"
        }
      }
    },
    "@aws-cdk/asset-node-proxy-agent-v6": {
      "targets": {
        "dotnet": {
          "namespace": "Amazon.CDK.Asset.NodeProxyAgentV6",
          "packageId": "Amazon.CDK.Asset.NodeProxyAgentV6"
        },
        "go": {
          "moduleName": "github.com/cdklabs/awscdk-asset-node-proxy-agent-go",
          "packageName": "nodeproxyagentv6"
        },
        "java": {
          "maven": {
            "artifactId": "cdk-asset-node-proxy-agent-v6",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.cdk.asset.node.proxy.agent.v6"
        },
        "js": {
          "npm": "@aws-cdk/asset-node-proxy-agent-v6"
        },
        "python": {
          "distName": "aws-cdk.asset-node-proxy-agent-v6",
          "module": "aws_cdk.asset_node_proxy_agent_v6"
        }
      }
    },
    "@aws-cdk/aws-iot-alpha": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/main/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.IoT.Alpha",
          "packageId": "Amazon.CDK.AWS.IoT.Alpha"
        },
        "go": {
          "moduleName": "github.com/aws/aws-cdk-go",
          "packageName": "awscdkiotalpha"
        },
        "java": {
          "maven": {
            "artifactId": "iot-alpha",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.iot.alpha"
        },
        "js": {
          "npm": "@aws-cdk/aws-iot-alpha"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 2"
          ],
          "distName": "aws-cdk.aws-iot-alpha",
          "module": "aws_cdk.aws_iot_alpha"
        }
      }
    },
    "@aws-cdk/aws-iotevents-alpha": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/main/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.IoTEvents.Alpha",
          "packageId": "Amazon.CDK.AWS.IoTEvents.Alpha"
        },
        "go": {
          "moduleName": "github.com/aws/aws-cdk-go",
          "packageName": "awscdkioteventsalpha"
        },
        "java": {
          "maven": {
            "artifactId": "iotevents-alpha",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.iotevents.alpha"
        },
        "js": {
          "npm": "@aws-cdk/aws-iotevents-alpha"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 2"
          ],
          "distName": "aws-cdk.aws-iotevents-alpha",
          "module": "aws_cdk.aws_iotevents_alpha"
        }
      }
    },
    "@aws-cdk/aws-kinesisfirehose-alpha": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/main/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.KinesisFirehose.Alpha",
          "packageId": "Amazon.CDK.AWS.KinesisFirehose.Alpha"
        },
        "go": {
          "moduleName": "github.com/aws/aws-cdk-go",
          "packageName": "awscdkkinesisfirehosealpha"
        },
        "java": {
          "maven": {
            "artifactId": "kinesisfirehose-alpha",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.kinesisfirehose.alpha"
        },
        "js": {
          "npm": "@aws-cdk/aws-kinesisfirehose-alpha"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 2"
          ],
          "distName": "aws-cdk.aws-kinesisfirehose-alpha",
          "module": "aws_cdk.aws_kinesisfirehose_alpha"
        }
      }
    },
    "@aws-cdk/aws-kinesisfirehose-destinations-alpha": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/main/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.KinesisFirehose.Destinations.Alpha",
          "packageId": "Amazon.CDK.AWS.KinesisFirehose.Destinations.Alpha"
        },
        "go": {
          "moduleName": "github.com/aws/aws-cdk-go",
          "packageName": "awscdkkinesisfirehosedestinationsalpha"
        },
        "java": {
          "maven": {
            "artifactId": "kinesisfirehose-destinations-alpha",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.kinesisfirehose.destinations.alpha"
        },
        "js": {
          "npm": "@aws-cdk/aws-kinesisfirehose-destinations-alpha"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 2"
          ],
          "distName": "aws-cdk.aws-kinesisfirehose-destinations-alpha",
          "module": "aws_cdk.aws_kinesisfirehose_destinations_alpha"
        }
      }
    },
    "aws-cdk-lib": {
      "submodules": {
        "aws-cdk-lib.alexa_ask": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.Alexa.Ask"
            },
            "java": {
              "package": "software.amazon.awscdk.alexa.ask"
            },
            "python": {
              "module": "aws_cdk.alexa_ask"
            }
          }
        },
        "aws-cdk-lib.assertions": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.Assertions"
            },
            "java": {
              "package": "software.amazon.awscdk.assertions"
            },
            "python": {
              "module": "aws_cdk.assertions"
            }
          }
        },
        "aws-cdk-lib.assets": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.Assets"
            },
            "java": {
              "package": "software.amazon.awscdk.assets"
            },
            "python": {
              "module": "aws_cdk.assets"
            }
          }
        },
        "aws-cdk-lib.aws_accessanalyzer": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.AccessAnalyzer"
            },
            "java": {
              "package": "software.amazon.awscdk.services.accessanalyzer"
            },
            "python": {
              "module": "aws_cdk.aws_accessanalyzer"
            }
          }
        },
        "aws-cdk-lib.aws_acmpca": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.ACMPCA"
            },
            "java": {
              "package": "software.amazon.awscdk.services.acmpca"
            },
            "python": {
              "module": "aws_cdk.aws_acmpca"
            }
          }
        },
        "aws-cdk-lib.aws_amazonmq": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.AmazonMQ"
            },
            "java": {
              "package": "software.amazon.awscdk.services.amazonmq"
            },
            "python": {
              "module": "aws_cdk.aws_amazonmq"
            }
          }
        },
        "aws-cdk-lib.aws_amplify": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Amplify"
            },
            "java": {
              "package": "software.amazon.awscdk.services.amplify"
            },
            "python": {
              "module": "aws_cdk.aws_amplify"
            }
          }
        },
        "aws-cdk-lib.aws_amplifyuibuilder": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.AmplifyUIBuilder"
            },
            "java": {
              "package": "software.amazon.awscdk.services.amplifyuibuilder"
            },
            "python": {
              "module": "aws_cdk.aws_amplifyuibuilder"
            }
          }
        },
        "aws-cdk-lib.aws_apigateway": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.APIGateway"
            },
            "java": {
              "package": "software.amazon.awscdk.services.apigateway"
            },
            "python": {
              "module": "aws_cdk.aws_apigateway"
            }
          }
        },
        "aws-cdk-lib.aws_apigatewayv2": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Apigatewayv2"
            },
            "java": {
              "package": "software.amazon.awscdk.services.apigatewayv2"
            },
            "python": {
              "module": "aws_cdk.aws_apigatewayv2"
            }
          }
        },
        "aws-cdk-lib.aws_apigatewayv2_authorizers": {},
        "aws-cdk-lib.aws_apigatewayv2_integrations": {},
        "aws-cdk-lib.aws_appconfig": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.AppConfig"
            },
            "java": {
              "package": "software.amazon.awscdk.services.appconfig"
            },
            "python": {
              "module": "aws_cdk.aws_appconfig"
            }
          }
        },
        "aws-cdk-lib.aws_appflow": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.AppFlow"
            },
            "java": {
              "package": "software.amazon.awscdk.services.appflow"
            },
            "python": {
              "module": "aws_cdk.aws_appflow"
            }
          }
        },
        "aws-cdk-lib.aws_appintegrations": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.AppIntegrations"
            },
            "java": {
              "package": "software.amazon.awscdk.services.appintegrations"
            },
            "python": {
              "module": "aws_cdk.aws_appintegrations"
            }
          }
        },
        "aws-cdk-lib.aws_applicationautoscaling": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.ApplicationAutoScaling"
            },
            "java": {
              "package": "software.amazon.awscdk.services.applicationautoscaling"
            },
            "python": {
              "module": "aws_cdk.aws_applicationautoscaling"
            }
          }
        },
        "aws-cdk-lib.aws_applicationinsights": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.ApplicationInsights"
            },
            "java": {
              "package": "software.amazon.awscdk.services.applicationinsights"
            },
            "python": {
              "module": "aws_cdk.aws_applicationinsights"
            }
          }
        },
        "aws-cdk-lib.aws_appmesh": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.AppMesh"
            },
            "java": {
              "package": "software.amazon.awscdk.services.appmesh"
            },
            "python": {
              "module": "aws_cdk.aws_appmesh"
            }
          }
        },
        "aws-cdk-lib.aws_apprunner": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.AppRunner"
            },
            "java": {
              "package": "software.amazon.awscdk.services.apprunner"
            },
            "python": {
              "module": "aws_cdk.aws_apprunner"
            }
          }
        },
        "aws-cdk-lib.aws_appstream": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.AppStream"
            },
            "java": {
              "package": "software.amazon.awscdk.services.appstream"
            },
            "python": {
              "module": "aws_cdk.aws_appstream"
            }
          }
        },
        "aws-cdk-lib.aws_appsync": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.AppSync"
            },
            "java": {
              "package": "software.amazon.awscdk.services.appsync"
            },
            "python": {
              "module": "aws_cdk.aws_appsync"
            }
          }
        },
        "aws-cdk-lib.aws_aps": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.APS"
            },
            "java": {
              "package": "software.amazon.awscdk.services.aps"
            },
            "python": {
              "module": "aws_cdk.aws_aps"
            }
          }
        },
        "aws-cdk-lib.aws_arczonalshift": {
          "targets": {
            "dotnet": {
              "package": "Amazon.CDK.AWS.ARCZonalShift"
            },
            "java": {
              "package": "software.amazon.awscdk.services.arczonalshift"
            },
            "python": {
              "module": "aws_cdk.aws_arczonalshift"
            }
          }
        },
        "aws-cdk-lib.aws_athena": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Athena"
            },
            "java": {
              "package": "software.amazon.awscdk.services.athena"
            },
            "python": {
              "module": "aws_cdk.aws_athena"
            }
          }
        },
        "aws-cdk-lib.aws_auditmanager": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.AuditManager"
            },
            "java": {
              "package": "software.amazon.awscdk.services.auditmanager"
            },
            "python": {
              "module": "aws_cdk.aws_auditmanager"
            }
          }
        },
        "aws-cdk-lib.aws_autoscaling": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.AutoScaling"
            },
            "java": {
              "package": "software.amazon.awscdk.services.autoscaling"
            },
            "python": {
              "module": "aws_cdk.aws_autoscaling"
            }
          }
        },
        "aws-cdk-lib.aws_autoscaling_common": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.AutoScaling.Common"
            },
            "java": {
              "package": "software.amazon.awscdk.services.autoscaling.common"
            },
            "python": {
              "module": "aws_cdk.aws_autoscaling_common"
            }
          }
        },
        "aws-cdk-lib.aws_autoscaling_hooktargets": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.AutoScaling.HookTargets"
            },
            "java": {
              "package": "software.amazon.awscdk.services.autoscaling.hooktargets"
            },
            "python": {
              "module": "aws_cdk.aws_autoscaling_hooktargets"
            }
          }
        },
        "aws-cdk-lib.aws_autoscalingplans": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.AutoScalingPlans"
            },
            "java": {
              "package": "software.amazon.awscdk.services.autoscalingplans"
            },
            "python": {
              "module": "aws_cdk.aws_autoscalingplans"
            }
          }
        },
        "aws-cdk-lib.aws_b2bi": {
          "targets": {
            "dotnet": {
              "package": "Amazon.CDK.AWS.B2BI"
            },
            "java": {
              "package": "software.amazon.awscdk.services.b2bi"
            },
            "python": {
              "module": "aws_cdk.aws_b2bi"
            }
          }
        },
        "aws-cdk-lib.aws_backup": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Backup"
            },
            "java": {
              "package": "software.amazon.awscdk.services.backup"
            },
            "python": {
              "module": "aws_cdk.aws_backup"
            }
          }
        },
        "aws-cdk-lib.aws_backupgateway": {
          "targets": {
            "dotnet": {
              "package": "Amazon.CDK.AWS.BackupGateway"
            },
            "java": {
              "package": "software.amazon.awscdk.services.backupgateway"
            },
            "python": {
              "module": "aws_cdk.aws_backupgateway"
            }
          }
        },
        "aws-cdk-lib.aws_batch": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Batch"
            },
            "java": {
              "package": "software.amazon.awscdk.services.batch"
            },
            "python": {
              "module": "aws_cdk.aws_batch"
            }
          }
        },
        "aws-cdk-lib.aws_bedrock": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Bedrock"
            },
            "java": {
              "package": "software.amazon.awscdk.services.bedrock"
            },
            "python": {
              "module": "aws_cdk.aws_bedrock"
            }
          }
        },
        "aws-cdk-lib.aws_billingconductor": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.BillingConductor"
            },
            "java": {
              "package": "software.amazon.awscdk.services.billingconductor"
            },
            "python": {
              "module": "aws_cdk.aws_billingconductor"
            }
          }
        },
        "aws-cdk-lib.aws_budgets": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Budgets"
            },
            "java": {
              "package": "software.amazon.awscdk.services.budgets"
            },
            "python": {
              "module": "aws_cdk.aws_budgets"
            }
          }
        },
        "aws-cdk-lib.aws_cassandra": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Cassandra"
            },
            "java": {
              "package": "software.amazon.awscdk.services.cassandra"
            },
            "python": {
              "module": "aws_cdk.aws_cassandra"
            }
          }
        },
        "aws-cdk-lib.aws_ce": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.CE"
            },
            "java": {
              "package": "software.amazon.awscdk.services.ce"
            },
            "python": {
              "module": "aws_cdk.aws_ce"
            }
          }
        },
        "aws-cdk-lib.aws_certificatemanager": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.CertificateManager"
            },
            "java": {
              "package": "software.amazon.awscdk.services.certificatemanager"
            },
            "python": {
              "module": "aws_cdk.aws_certificatemanager"
            }
          }
        },
        "aws-cdk-lib.aws_chatbot": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Chatbot"
            },
            "java": {
              "package": "software.amazon.awscdk.services.chatbot"
            },
            "python": {
              "module": "aws_cdk.aws_chatbot"
            }
          }
        },
        "aws-cdk-lib.aws_cleanrooms": {
          "targets": {
            "dotnet": {
              "package": "Amazon.CDK.AWS.CleanRooms"
            },
            "java": {
              "package": "software.amazon.awscdk.services.cleanrooms"
            },
            "python": {
              "module": "aws_cdk.aws_cleanrooms"
            }
          }
        },
        "aws-cdk-lib.aws_cloud9": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Cloud9"
            },
            "java": {
              "package": "software.amazon.awscdk.services.cloud9"
            },
            "python": {
              "module": "aws_cdk.aws_cloud9"
            }
          }
        },
        "aws-cdk-lib.aws_cloudformation": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.CloudFormation"
            },
            "java": {
              "package": "software.amazon.awscdk.services.cloudformation"
            },
            "python": {
              "module": "aws_cdk.aws_cloudformation"
            }
          }
        },
        "aws-cdk-lib.aws_cloudfront": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.CloudFront"
            },
            "java": {
              "package": "software.amazon.awscdk.services.cloudfront"
            },
            "python": {
              "module": "aws_cdk.aws_cloudfront"
            }
          }
        },
        "aws-cdk-lib.aws_cloudfront.experimental": {},
        "aws-cdk-lib.aws_cloudfront_origins": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.CloudFront.Origins"
            },
            "java": {
              "package": "software.amazon.awscdk.services.cloudfront.origins"
            },
            "python": {
              "module": "aws_cdk.aws_cloudfront_origins"
            }
          }
        },
        "aws-cdk-lib.aws_cloudtrail": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.CloudTrail"
            },
            "java": {
              "package": "software.amazon.awscdk.services.cloudtrail"
            },
            "python": {
              "module": "aws_cdk.aws_cloudtrail"
            }
          }
        },
        "aws-cdk-lib.aws_cloudwatch": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.CloudWatch"
            },
            "java": {
              "package": "software.amazon.awscdk.services.cloudwatch"
            },
            "python": {
              "module": "aws_cdk.aws_cloudwatch"
            }
          }
        },
        "aws-cdk-lib.aws_cloudwatch_actions": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.CloudWatch.Actions"
            },
            "java": {
              "package": "software.amazon.awscdk.services.cloudwatch.actions"
            },
            "python": {
              "module": "aws_cdk.aws_cloudwatch_actions"
            }
          }
        },
        "aws-cdk-lib.aws_codeartifact": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.CodeArtifact"
            },
            "java": {
              "package": "software.amazon.awscdk.services.codeartifact"
            },
            "python": {
              "module": "aws_cdk.aws_codeartifact"
            }
          }
        },
        "aws-cdk-lib.aws_codebuild": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.CodeBuild"
            },
            "java": {
              "package": "software.amazon.awscdk.services.codebuild"
            },
            "python": {
              "module": "aws_cdk.aws_codebuild"
            }
          }
        },
        "aws-cdk-lib.aws_codecommit": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.CodeCommit"
            },
            "java": {
              "package": "software.amazon.awscdk.services.codecommit"
            },
            "python": {
              "module": "aws_cdk.aws_codecommit"
            }
          }
        },
        "aws-cdk-lib.aws_codedeploy": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.CodeDeploy"
            },
            "java": {
              "package": "software.amazon.awscdk.services.codedeploy"
            },
            "python": {
              "module": "aws_cdk.aws_codedeploy"
            }
          }
        },
        "aws-cdk-lib.aws_codeguruprofiler": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.CodeGuruProfiler"
            },
            "java": {
              "package": "software.amazon.awscdk.services.codeguruprofiler"
            },
            "python": {
              "module": "aws_cdk.aws_codeguruprofiler"
            }
          }
        },
        "aws-cdk-lib.aws_codegurureviewer": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.CodeGuruReviewer"
            },
            "java": {
              "package": "software.amazon.awscdk.services.codegurureviewer"
            },
            "python": {
              "module": "aws_cdk.aws_codegurureviewer"
            }
          }
        },
        "aws-cdk-lib.aws_codepipeline": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.CodePipeline"
            },
            "java": {
              "package": "software.amazon.awscdk.services.codepipeline"
            },
            "python": {
              "module": "aws_cdk.aws_codepipeline"
            }
          }
        },
        "aws-cdk-lib.aws_codepipeline_actions": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.CodePipeline.Actions"
            },
            "java": {
              "package": "software.amazon.awscdk.services.codepipeline.actions"
            },
            "python": {
              "module": "aws_cdk.aws_codepipeline_actions"
            }
          }
        },
        "aws-cdk-lib.aws_codestar": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Codestar"
            },
            "java": {
              "package": "software.amazon.awscdk.services.codestar"
            },
            "python": {
              "module": "aws_cdk.aws_codestar"
            }
          }
        },
        "aws-cdk-lib.aws_codestarconnections": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.CodeStarConnections"
            },
            "java": {
              "package": "software.amazon.awscdk.services.codestarconnections"
            },
            "python": {
              "module": "aws_cdk.aws_codestarconnections"
            }
          }
        },
        "aws-cdk-lib.aws_codestarnotifications": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.CodeStarNotifications"
            },
            "java": {
              "package": "software.amazon.awscdk.services.codestarnotifications"
            },
            "python": {
              "module": "aws_cdk.aws_codestarnotifications"
            }
          }
        },
        "aws-cdk-lib.aws_cognito": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Cognito"
            },
            "java": {
              "package": "software.amazon.awscdk.services.cognito"
            },
            "python": {
              "module": "aws_cdk.aws_cognito"
            }
          }
        },
        "aws-cdk-lib.aws_comprehend": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Comprehend"
            },
            "java": {
              "package": "software.amazon.awscdk.services.comprehend"
            },
            "python": {
              "module": "aws_cdk.aws_comprehend"
            }
          }
        },
        "aws-cdk-lib.aws_config": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Config"
            },
            "java": {
              "package": "software.amazon.awscdk.services.config"
            },
            "python": {
              "module": "aws_cdk.aws_config"
            }
          }
        },
        "aws-cdk-lib.aws_connect": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Connect"
            },
            "java": {
              "package": "software.amazon.awscdk.services.connect"
            },
            "python": {
              "module": "aws_cdk.aws_connect"
            }
          }
        },
        "aws-cdk-lib.aws_connectcampaigns": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.ConnectCampaigns"
            },
            "java": {
              "package": "software.amazon.awscdk.services.connectcampaigns"
            },
            "python": {
              "module": "aws_cdk.aws_connectcampaigns"
            }
          }
        },
        "aws-cdk-lib.aws_controltower": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.ControlTower"
            },
            "java": {
              "package": "software.amazon.awscdk.services.controltower"
            },
            "python": {
              "module": "aws_cdk.aws_controltower"
            }
          }
        },
        "aws-cdk-lib.aws_cur": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.CUR"
            },
            "java": {
              "package": "software.amazon.awscdk.services.cur"
            },
            "python": {
              "module": "aws_cdk.aws_cur"
            }
          }
        },
        "aws-cdk-lib.aws_customerprofiles": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.CustomerProfiles"
            },
            "java": {
              "package": "software.amazon.awscdk.services.customerprofiles"
            },
            "python": {
              "module": "aws_cdk.aws_customerprofiles"
            }
          }
        },
        "aws-cdk-lib.aws_databrew": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.DataBrew"
            },
            "java": {
              "package": "software.amazon.awscdk.services.databrew"
            },
            "python": {
              "module": "aws_cdk.aws_databrew"
            }
          }
        },
        "aws-cdk-lib.aws_datapipeline": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.DataPipeline"
            },
            "java": {
              "package": "software.amazon.awscdk.services.datapipeline"
            },
            "python": {
              "module": "aws_cdk.aws_datapipeline"
            }
          }
        },
        "aws-cdk-lib.aws_datasync": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.DataSync"
            },
            "java": {
              "package": "software.amazon.awscdk.services.datasync"
            },
            "python": {
              "module": "aws_cdk.aws_datasync"
            }
          }
        },
        "aws-cdk-lib.aws_datazone": {
          "targets": {
            "dotnet": {
              "package": "Amazon.CDK.AWS.DataZone"
            },
            "java": {
              "package": "software.amazon.awscdk.services.datazone"
            },
            "python": {
              "module": "aws_cdk.aws_datazone"
            }
          }
        },
        "aws-cdk-lib.aws_dax": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.DAX"
            },
            "java": {
              "package": "software.amazon.awscdk.services.dax"
            },
            "python": {
              "module": "aws_cdk.aws_dax"
            }
          }
        },
        "aws-cdk-lib.aws_detective": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Detective"
            },
            "java": {
              "package": "software.amazon.awscdk.services.detective"
            },
            "python": {
              "module": "aws_cdk.aws_detective"
            }
          }
        },
        "aws-cdk-lib.aws_devicefarm": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.DeviceFarm"
            },
            "java": {
              "package": "software.amazon.awscdk.services.devicefarm"
            },
            "python": {
              "module": "aws_cdk.aws_devicefarm"
            }
          }
        },
        "aws-cdk-lib.aws_devopsguru": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.DevOpsGuru"
            },
            "java": {
              "package": "software.amazon.awscdk.services.devopsguru"
            },
            "python": {
              "module": "aws_cdk.aws_devopsguru"
            }
          }
        },
        "aws-cdk-lib.aws_directoryservice": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.DirectoryService"
            },
            "java": {
              "package": "software.amazon.awscdk.services.directoryservice"
            },
            "python": {
              "module": "aws_cdk.aws_directoryservice"
            }
          }
        },
        "aws-cdk-lib.aws_dlm": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.DLM"
            },
            "java": {
              "package": "software.amazon.awscdk.services.dlm"
            },
            "python": {
              "module": "aws_cdk.aws_dlm"
            }
          }
        },
        "aws-cdk-lib.aws_dms": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.DMS"
            },
            "java": {
              "package": "software.amazon.awscdk.services.dms"
            },
            "python": {
              "module": "aws_cdk.aws_dms"
            }
          }
        },
        "aws-cdk-lib.aws_docdb": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.DocDB"
            },
            "java": {
              "package": "software.amazon.awscdk.services.docdb"
            },
            "python": {
              "module": "aws_cdk.aws_docdb"
            }
          }
        },
        "aws-cdk-lib.aws_docdbelastic": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.DocDBElastic"
            },
            "java": {
              "package": "software.amazon.awscdk.services.docdbelastic"
            },
            "python": {
              "module": "aws_cdk.aws_docdbelastic"
            }
          }
        },
        "aws-cdk-lib.aws_dynamodb": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.DynamoDB"
            },
            "java": {
              "package": "software.amazon.awscdk.services.dynamodb"
            },
            "python": {
              "module": "aws_cdk.aws_dynamodb"
            }
          }
        },
        "aws-cdk-lib.aws_ec2": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.EC2"
            },
            "java": {
              "package": "software.amazon.awscdk.services.ec2"
            },
            "python": {
              "module": "aws_cdk.aws_ec2"
            }
          }
        },
        "aws-cdk-lib.aws_ecr": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.ECR"
            },
            "java": {
              "package": "software.amazon.awscdk.services.ecr"
            },
            "python": {
              "module": "aws_cdk.aws_ecr"
            }
          }
        },
        "aws-cdk-lib.aws_ecr_assets": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Ecr.Assets"
            },
            "java": {
              "package": "software.amazon.awscdk.services.ecr.assets"
            },
            "python": {
              "module": "aws_cdk.aws_ecr_assets"
            }
          }
        },
        "aws-cdk-lib.aws_ecs": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.ECS"
            },
            "java": {
              "package": "software.amazon.awscdk.services.ecs"
            },
            "python": {
              "module": "aws_cdk.aws_ecs"
            }
          }
        },
        "aws-cdk-lib.aws_ecs_patterns": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.ECS.Patterns"
            },
            "java": {
              "package": "software.amazon.awscdk.services.ecs.patterns"
            },
            "python": {
              "module": "aws_cdk.aws_ecs_patterns"
            }
          }
        },
        "aws-cdk-lib.aws_efs": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.EFS"
            },
            "java": {
              "package": "software.amazon.awscdk.services.efs"
            },
            "python": {
              "module": "aws_cdk.aws_efs"
            }
          }
        },
        "aws-cdk-lib.aws_eks": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.EKS"
            },
            "java": {
              "package": "software.amazon.awscdk.services.eks"
            },
            "python": {
              "module": "aws_cdk.aws_eks"
            }
          }
        },
        "aws-cdk-lib.aws_elasticache": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.ElastiCache"
            },
            "java": {
              "package": "software.amazon.awscdk.services.elasticache"
            },
            "python": {
              "module": "aws_cdk.aws_elasticache"
            }
          }
        },
        "aws-cdk-lib.aws_elasticbeanstalk": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.ElasticBeanstalk"
            },
            "java": {
              "package": "software.amazon.awscdk.services.elasticbeanstalk"
            },
            "python": {
              "module": "aws_cdk.aws_elasticbeanstalk"
            }
          }
        },
        "aws-cdk-lib.aws_elasticloadbalancing": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.ElasticLoadBalancing"
            },
            "java": {
              "package": "software.amazon.awscdk.services.elasticloadbalancing"
            },
            "python": {
              "module": "aws_cdk.aws_elasticloadbalancing"
            }
          }
        },
        "aws-cdk-lib.aws_elasticloadbalancingv2": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.ElasticLoadBalancingV2"
            },
            "java": {
              "package": "software.amazon.awscdk.services.elasticloadbalancingv2"
            },
            "python": {
              "module": "aws_cdk.aws_elasticloadbalancingv2"
            }
          }
        },
        "aws-cdk-lib.aws_elasticloadbalancingv2_actions": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.ElasticLoadBalancingV2.Actions"
            },
            "java": {
              "package": "software.amazon.awscdk.services.elasticloadbalancingv2.actions"
            },
            "python": {
              "module": "aws_cdk.aws_elasticloadbalancingv2_actions"
            }
          }
        },
        "aws-cdk-lib.aws_elasticloadbalancingv2_targets": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.ElasticLoadBalancingV2.Targets"
            },
            "java": {
              "package": "software.amazon.awscdk.services.elasticloadbalancingv2.targets"
            },
            "python": {
              "module": "aws_cdk.aws_elasticloadbalancingv2_targets"
            }
          }
        },
        "aws-cdk-lib.aws_elasticsearch": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Elasticsearch"
            },
            "java": {
              "package": "software.amazon.awscdk.services.elasticsearch"
            },
            "python": {
              "module": "aws_cdk.aws_elasticsearch"
            }
          }
        },
        "aws-cdk-lib.aws_emr": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.EMR"
            },
            "java": {
              "package": "software.amazon.awscdk.services.emr"
            },
            "python": {
              "module": "aws_cdk.aws_emr"
            }
          }
        },
        "aws-cdk-lib.aws_emrcontainers": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.EMRContainers"
            },
            "java": {
              "package": "software.amazon.awscdk.services.emrcontainers"
            },
            "python": {
              "module": "aws_cdk.aws_emrcontainers"
            }
          }
        },
        "aws-cdk-lib.aws_emrserverless": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.EMRServerless"
            },
            "java": {
              "package": "software.amazon.awscdk.services.emrserverless"
            },
            "python": {
              "module": "aws_cdk.aws_emrserverless"
            }
          }
        },
        "aws-cdk-lib.aws_entityresolution": {
          "targets": {
            "dotnet": {
              "package": "Amazon.CDK.AWS.EntityResolution"
            },
            "java": {
              "package": "software.amazon.awscdk.services.entityresolution"
            },
            "python": {
              "module": "aws_cdk.aws_entityresolution"
            }
          }
        },
        "aws-cdk-lib.aws_events": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Events"
            },
            "java": {
              "package": "software.amazon.awscdk.services.events"
            },
            "python": {
              "module": "aws_cdk.aws_events"
            }
          }
        },
        "aws-cdk-lib.aws_events_targets": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Events.Targets"
            },
            "java": {
              "package": "software.amazon.awscdk.services.events.targets"
            },
            "python": {
              "module": "aws_cdk.aws_events_targets"
            }
          }
        },
        "aws-cdk-lib.aws_eventschemas": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.EventSchemas"
            },
            "java": {
              "package": "software.amazon.awscdk.services.eventschemas"
            },
            "python": {
              "module": "aws_cdk.aws_eventschemas"
            }
          }
        },
        "aws-cdk-lib.aws_evidently": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Evidently"
            },
            "java": {
              "package": "software.amazon.awscdk.services.evidently"
            },
            "python": {
              "module": "aws_cdk.aws_evidently"
            }
          }
        },
        "aws-cdk-lib.aws_finspace": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.FinSpace"
            },
            "java": {
              "package": "software.amazon.awscdk.services.finspace"
            },
            "python": {
              "module": "aws_cdk.aws_finspace"
            }
          }
        },
        "aws-cdk-lib.aws_fis": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.FIS"
            },
            "java": {
              "package": "software.amazon.awscdk.services.fis"
            },
            "python": {
              "module": "aws_cdk.aws_fis"
            }
          }
        },
        "aws-cdk-lib.aws_fms": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.FMS"
            },
            "java": {
              "package": "software.amazon.awscdk.services.fms"
            },
            "python": {
              "module": "aws_cdk.aws_fms"
            }
          }
        },
        "aws-cdk-lib.aws_forecast": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Forecast"
            },
            "java": {
              "package": "software.amazon.awscdk.services.forecast"
            },
            "python": {
              "module": "aws_cdk.aws_forecast"
            }
          }
        },
        "aws-cdk-lib.aws_frauddetector": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.FraudDetector"
            },
            "java": {
              "package": "software.amazon.awscdk.services.frauddetector"
            },
            "python": {
              "module": "aws_cdk.aws_frauddetector"
            }
          }
        },
        "aws-cdk-lib.aws_fsx": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.FSx"
            },
            "java": {
              "package": "software.amazon.awscdk.services.fsx"
            },
            "python": {
              "module": "aws_cdk.aws_fsx"
            }
          }
        },
        "aws-cdk-lib.aws_gamelift": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.GameLift"
            },
            "java": {
              "package": "software.amazon.awscdk.services.gamelift"
            },
            "python": {
              "module": "aws_cdk.aws_gamelift"
            }
          }
        },
        "aws-cdk-lib.aws_globalaccelerator": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.GlobalAccelerator"
            },
            "java": {
              "package": "software.amazon.awscdk.services.globalaccelerator"
            },
            "python": {
              "module": "aws_cdk.aws_globalaccelerator"
            }
          }
        },
        "aws-cdk-lib.aws_globalaccelerator_endpoints": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.GlobalAccelerator.Endpoints"
            },
            "java": {
              "package": "software.amazon.awscdk.services.globalaccelerator.endpoints"
            },
            "python": {
              "module": "aws_cdk.aws_globalaccelerator_endpoints"
            }
          }
        },
        "aws-cdk-lib.aws_glue": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Glue"
            },
            "java": {
              "package": "software.amazon.awscdk.services.glue"
            },
            "python": {
              "module": "aws_cdk.aws_glue"
            }
          }
        },
        "aws-cdk-lib.aws_grafana": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Grafana"
            },
            "java": {
              "package": "software.amazon.awscdk.services.grafana"
            },
            "python": {
              "module": "aws_cdk.aws_grafana"
            }
          }
        },
        "aws-cdk-lib.aws_greengrass": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Greengrass"
            },
            "java": {
              "package": "software.amazon.awscdk.services.greengrass"
            },
            "python": {
              "module": "aws_cdk.aws_greengrass"
            }
          }
        },
        "aws-cdk-lib.aws_greengrassv2": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.GreengrassV2"
            },
            "java": {
              "package": "software.amazon.awscdk.services.greengrassv2"
            },
            "python": {
              "module": "aws_cdk.aws_greengrassv2"
            }
          }
        },
        "aws-cdk-lib.aws_groundstation": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.GroundStation"
            },
            "java": {
              "package": "software.amazon.awscdk.services.groundstation"
            },
            "python": {
              "module": "aws_cdk.aws_groundstation"
            }
          }
        },
        "aws-cdk-lib.aws_guardduty": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.GuardDuty"
            },
            "java": {
              "package": "software.amazon.awscdk.services.guardduty"
            },
            "python": {
              "module": "aws_cdk.aws_guardduty"
            }
          }
        },
        "aws-cdk-lib.aws_healthimaging": {
          "targets": {
            "dotnet": {
              "package": "Amazon.CDK.AWS.HealthImaging"
            },
            "java": {
              "package": "software.amazon.awscdk.services.healthimaging"
            },
            "python": {
              "module": "aws_cdk.aws_healthimaging"
            }
          }
        },
        "aws-cdk-lib.aws_healthlake": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.HealthLake"
            },
            "java": {
              "package": "software.amazon.awscdk.services.healthlake"
            },
            "python": {
              "module": "aws_cdk.aws_healthlake"
            }
          }
        },
        "aws-cdk-lib.aws_iam": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.IAM"
            },
            "java": {
              "package": "software.amazon.awscdk.services.iam"
            },
            "python": {
              "module": "aws_cdk.aws_iam"
            }
          }
        },
        "aws-cdk-lib.aws_identitystore": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.IdentityStore"
            },
            "java": {
              "package": "software.amazon.awscdk.services.identitystore"
            },
            "python": {
              "module": "aws_cdk.aws_identitystore"
            }
          }
        },
        "aws-cdk-lib.aws_imagebuilder": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.ImageBuilder"
            },
            "java": {
              "package": "software.amazon.awscdk.services.imagebuilder"
            },
            "python": {
              "module": "aws_cdk.aws_imagebuilder"
            }
          }
        },
        "aws-cdk-lib.aws_inspector": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Inspector"
            },
            "java": {
              "package": "software.amazon.awscdk.services.inspector"
            },
            "python": {
              "module": "aws_cdk.aws_inspector"
            }
          }
        },
        "aws-cdk-lib.aws_inspectorv2": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.InspectorV2"
            },
            "java": {
              "package": "software.amazon.awscdk.services.inspectorv2"
            },
            "python": {
              "module": "aws_cdk.aws_inspectorv2"
            }
          }
        },
        "aws-cdk-lib.aws_internetmonitor": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.InternetMonitor"
            },
            "java": {
              "package": "software.amazon.awscdk.services.internetmonitor"
            },
            "python": {
              "module": "aws_cdk.aws_internetmonitor"
            }
          }
        },
        "aws-cdk-lib.aws_iot": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.IoT"
            },
            "java": {
              "package": "software.amazon.awscdk.services.iot"
            },
            "python": {
              "module": "aws_cdk.aws_iot"
            }
          }
        },
        "aws-cdk-lib.aws_iot1click": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.IoT1Click"
            },
            "java": {
              "package": "software.amazon.awscdk.services.iot1click"
            },
            "python": {
              "module": "aws_cdk.aws_iot1click"
            }
          }
        },
        "aws-cdk-lib.aws_iotanalytics": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.IoTAnalytics"
            },
            "java": {
              "package": "software.amazon.awscdk.services.iotanalytics"
            },
            "python": {
              "module": "aws_cdk.aws_iotanalytics"
            }
          }
        },
        "aws-cdk-lib.aws_iotcoredeviceadvisor": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.IoTCoreDeviceAdvisor"
            },
            "java": {
              "package": "software.amazon.awscdk.services.iotcoredeviceadvisor"
            },
            "python": {
              "module": "aws_cdk.aws_iotcoredeviceadvisor"
            }
          }
        },
        "aws-cdk-lib.aws_iotevents": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.IoTEvents"
            },
            "java": {
              "package": "software.amazon.awscdk.services.iotevents"
            },
            "python": {
              "module": "aws_cdk.aws_iotevents"
            }
          }
        },
        "aws-cdk-lib.aws_iotfleethub": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.IoTFleetHub"
            },
            "java": {
              "package": "software.amazon.awscdk.services.iotfleethub"
            },
            "python": {
              "module": "aws_cdk.aws_iotfleethub"
            }
          }
        },
        "aws-cdk-lib.aws_iotfleetwise": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.IoTFleetWise"
            },
            "java": {
              "package": "software.amazon.awscdk.services.iotfleetwise"
            },
            "python": {
              "module": "aws_cdk.aws_iotfleetwise"
            }
          }
        },
        "aws-cdk-lib.aws_iotsitewise": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.IoTSiteWise"
            },
            "java": {
              "package": "software.amazon.awscdk.services.iotsitewise"
            },
            "python": {
              "module": "aws_cdk.aws_iotsitewise"
            }
          }
        },
        "aws-cdk-lib.aws_iotthingsgraph": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.IoTThingsGraph"
            },
            "java": {
              "package": "software.amazon.awscdk.services.iotthingsgraph"
            },
            "python": {
              "module": "aws_cdk.aws_iotthingsgraph"
            }
          }
        },
        "aws-cdk-lib.aws_iottwinmaker": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.IoTTwinMaker"
            },
            "java": {
              "package": "software.amazon.awscdk.services.iottwinmaker"
            },
            "python": {
              "module": "aws_cdk.aws_iottwinmaker"
            }
          }
        },
        "aws-cdk-lib.aws_iotwireless": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.IoTWireless"
            },
            "java": {
              "package": "software.amazon.awscdk.services.iotwireless"
            },
            "python": {
              "module": "aws_cdk.aws_iotwireless"
            }
          }
        },
        "aws-cdk-lib.aws_ivs": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Ivs"
            },
            "java": {
              "package": "software.amazon.awscdk.services.ivs"
            },
            "python": {
              "module": "aws_cdk.aws_ivs"
            }
          }
        },
        "aws-cdk-lib.aws_ivschat": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.IVSChat"
            },
            "java": {
              "package": "software.amazon.awscdk.services.ivschat"
            },
            "python": {
              "module": "aws_cdk.aws_ivschat"
            }
          }
        },
        "aws-cdk-lib.aws_kafkaconnect": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.KafkaConnect"
            },
            "java": {
              "package": "software.amazon.awscdk.services.kafkaconnect"
            },
            "python": {
              "module": "aws_cdk.aws_kafkaconnect"
            }
          }
        },
        "aws-cdk-lib.aws_kendra": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Kendra"
            },
            "java": {
              "package": "software.amazon.awscdk.services.kendra"
            },
            "python": {
              "module": "aws_cdk.aws_kendra"
            }
          }
        },
        "aws-cdk-lib.aws_kendraranking": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.KendraRanking"
            },
            "java": {
              "package": "software.amazon.awscdk.services.kendraranking"
            },
            "python": {
              "module": "aws_cdk.aws_kendraranking"
            }
          }
        },
        "aws-cdk-lib.aws_kinesis": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Kinesis"
            },
            "java": {
              "package": "software.amazon.awscdk.services.kinesis"
            },
            "python": {
              "module": "aws_cdk.aws_kinesis"
            }
          }
        },
        "aws-cdk-lib.aws_kinesisanalytics": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.KinesisAnalytics"
            },
            "java": {
              "package": "software.amazon.awscdk.services.kinesisanalytics"
            },
            "python": {
              "module": "aws_cdk.aws_kinesisanalytics"
            }
          }
        },
        "aws-cdk-lib.aws_kinesisanalyticsv2": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.KinesisAnalyticsV2"
            },
            "java": {
              "package": "software.amazon.awscdk.services.kinesisanalyticsv2"
            },
            "python": {
              "module": "aws_cdk.aws_kinesisanalyticsv2"
            }
          }
        },
        "aws-cdk-lib.aws_kinesisfirehose": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.KinesisFirehose"
            },
            "java": {
              "package": "software.amazon.awscdk.services.kinesisfirehose"
            },
            "python": {
              "module": "aws_cdk.aws_kinesisfirehose"
            }
          }
        },
        "aws-cdk-lib.aws_kinesisvideo": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.KinesisVideo"
            },
            "java": {
              "package": "software.amazon.awscdk.services.kinesisvideo"
            },
            "python": {
              "module": "aws_cdk.aws_kinesisvideo"
            }
          }
        },
        "aws-cdk-lib.aws_kms": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.KMS"
            },
            "java": {
              "package": "software.amazon.awscdk.services.kms"
            },
            "python": {
              "module": "aws_cdk.aws_kms"
            }
          }
        },
        "aws-cdk-lib.aws_lakeformation": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.LakeFormation"
            },
            "java": {
              "package": "software.amazon.awscdk.services.lakeformation"
            },
            "python": {
              "module": "aws_cdk.aws_lakeformation"
            }
          }
        },
        "aws-cdk-lib.aws_lambda": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Lambda"
            },
            "java": {
              "package": "software.amazon.awscdk.services.lambda"
            },
            "python": {
              "module": "aws_cdk.aws_lambda"
            }
          }
        },
        "aws-cdk-lib.aws_lambda_destinations": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Lambda.Destinations"
            },
            "java": {
              "package": "software.amazon.awscdk.services.lambda.destinations"
            },
            "python": {
              "module": "aws_cdk.aws_lambda_destinations"
            }
          }
        },
        "aws-cdk-lib.aws_lambda_event_sources": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Lambda.EventSources"
            },
            "java": {
              "package": "software.amazon.awscdk.services.lambda.eventsources"
            },
            "python": {
              "module": "aws_cdk.aws_lambda_event_sources"
            }
          }
        },
        "aws-cdk-lib.aws_lambda_nodejs": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Lambda.Nodejs"
            },
            "java": {
              "package": "software.amazon.awscdk.services.lambda.nodejs"
            },
            "python": {
              "module": "aws_cdk.aws_lambda_nodejs"
            }
          }
        },
        "aws-cdk-lib.aws_lex": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Lex"
            },
            "java": {
              "package": "software.amazon.awscdk.services.lex"
            },
            "python": {
              "module": "aws_cdk.aws_lex"
            }
          }
        },
        "aws-cdk-lib.aws_licensemanager": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.LicenseManager"
            },
            "java": {
              "package": "software.amazon.awscdk.services.licensemanager"
            },
            "python": {
              "module": "aws_cdk.aws_licensemanager"
            }
          }
        },
        "aws-cdk-lib.aws_lightsail": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Lightsail"
            },
            "java": {
              "package": "software.amazon.awscdk.services.lightsail"
            },
            "python": {
              "module": "aws_cdk.aws_lightsail"
            }
          }
        },
        "aws-cdk-lib.aws_location": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Location"
            },
            "java": {
              "package": "software.amazon.awscdk.services.location"
            },
            "python": {
              "module": "aws_cdk.aws_location"
            }
          }
        },
        "aws-cdk-lib.aws_logs": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Logs"
            },
            "java": {
              "package": "software.amazon.awscdk.services.logs"
            },
            "python": {
              "module": "aws_cdk.aws_logs"
            }
          }
        },
        "aws-cdk-lib.aws_logs_destinations": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Logs.Destinations"
            },
            "java": {
              "package": "software.amazon.awscdk.services.logs.destinations"
            },
            "python": {
              "module": "aws_cdk.aws_logs_destinations"
            }
          }
        },
        "aws-cdk-lib.aws_lookoutequipment": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.LookoutEquipment"
            },
            "java": {
              "package": "software.amazon.awscdk.services.lookoutequipment"
            },
            "python": {
              "module": "aws_cdk.aws_lookoutequipment"
            }
          }
        },
        "aws-cdk-lib.aws_lookoutmetrics": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.LookoutMetrics"
            },
            "java": {
              "package": "software.amazon.awscdk.services.lookoutmetrics"
            },
            "python": {
              "module": "aws_cdk.aws_lookoutmetrics"
            }
          }
        },
        "aws-cdk-lib.aws_lookoutvision": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.LookoutVision"
            },
            "java": {
              "package": "software.amazon.awscdk.services.lookoutvision"
            },
            "python": {
              "module": "aws_cdk.aws_lookoutvision"
            }
          }
        },
        "aws-cdk-lib.aws_m2": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.M2"
            },
            "java": {
              "package": "software.amazon.awscdk.services.m2"
            },
            "python": {
              "module": "aws_cdk.aws_m2"
            }
          }
        },
        "aws-cdk-lib.aws_macie": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Macie"
            },
            "java": {
              "package": "software.amazon.awscdk.services.macie"
            },
            "python": {
              "module": "aws_cdk.aws_macie"
            }
          }
        },
        "aws-cdk-lib.aws_managedblockchain": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.ManagedBlockchain"
            },
            "java": {
              "package": "software.amazon.awscdk.services.managedblockchain"
            },
            "python": {
              "module": "aws_cdk.aws_managedblockchain"
            }
          }
        },
        "aws-cdk-lib.aws_mediaconnect": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.MediaConnect"
            },
            "java": {
              "package": "software.amazon.awscdk.services.mediaconnect"
            },
            "python": {
              "module": "aws_cdk.aws_mediaconnect"
            }
          }
        },
        "aws-cdk-lib.aws_mediaconvert": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.MediaConvert"
            },
            "java": {
              "package": "software.amazon.awscdk.services.mediaconvert"
            },
            "python": {
              "module": "aws_cdk.aws_mediaconvert"
            }
          }
        },
        "aws-cdk-lib.aws_medialive": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.MediaLive"
            },
            "java": {
              "package": "software.amazon.awscdk.services.medialive"
            },
            "python": {
              "module": "aws_cdk.aws_medialive"
            }
          }
        },
        "aws-cdk-lib.aws_mediapackage": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.MediaPackage"
            },
            "java": {
              "package": "software.amazon.awscdk.services.mediapackage"
            },
            "python": {
              "module": "aws_cdk.aws_mediapackage"
            }
          }
        },
        "aws-cdk-lib.aws_mediapackagev2": {
          "targets": {
            "dotnet": {
              "package": "Amazon.CDK.AWS.MediaPackageV2"
            },
            "java": {
              "package": "software.amazon.awscdk.services.mediapackagev2"
            },
            "python": {
              "module": "aws_cdk.aws_mediapackagev2"
            }
          }
        },
        "aws-cdk-lib.aws_mediastore": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.MediaStore"
            },
            "java": {
              "package": "software.amazon.awscdk.services.mediastore"
            },
            "python": {
              "module": "aws_cdk.aws_mediastore"
            }
          }
        },
        "aws-cdk-lib.aws_mediatailor": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.MediaTailor"
            },
            "java": {
              "package": "software.amazon.awscdk.services.mediatailor"
            },
            "python": {
              "module": "aws_cdk.aws_mediatailor"
            }
          }
        },
        "aws-cdk-lib.aws_memorydb": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.MemoryDB"
            },
            "java": {
              "package": "software.amazon.awscdk.services.memorydb"
            },
            "python": {
              "module": "aws_cdk.aws_memorydb"
            }
          }
        },
        "aws-cdk-lib.aws_msk": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.MSK"
            },
            "java": {
              "package": "software.amazon.awscdk.services.msk"
            },
            "python": {
              "module": "aws_cdk.aws_msk"
            }
          }
        },
        "aws-cdk-lib.aws_mwaa": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.MWAA"
            },
            "java": {
              "package": "software.amazon.awscdk.services.mwaa"
            },
            "python": {
              "module": "aws_cdk.aws_mwaa"
            }
          }
        },
        "aws-cdk-lib.aws_neptune": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Neptune"
            },
            "java": {
              "package": "software.amazon.awscdk.services.neptune"
            },
            "python": {
              "module": "aws_cdk.aws_neptune"
            }
          }
        },
        "aws-cdk-lib.aws_neptunegraph": {
          "targets": {
            "dotnet": {
              "package": "Amazon.CDK.AWS.NeptuneGraph"
            },
            "java": {
              "package": "software.amazon.awscdk.services.neptunegraph"
            },
            "python": {
              "module": "aws_cdk.aws_neptunegraph"
            }
          }
        },
        "aws-cdk-lib.aws_networkfirewall": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.NetworkFirewall"
            },
            "java": {
              "package": "software.amazon.awscdk.services.networkfirewall"
            },
            "python": {
              "module": "aws_cdk.aws_networkfirewall"
            }
          }
        },
        "aws-cdk-lib.aws_networkmanager": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.NetworkManager"
            },
            "java": {
              "package": "software.amazon.awscdk.services.networkmanager"
            },
            "python": {
              "module": "aws_cdk.aws_networkmanager"
            }
          }
        },
        "aws-cdk-lib.aws_nimblestudio": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.NimbleStudio"
            },
            "java": {
              "package": "software.amazon.awscdk.services.nimblestudio"
            },
            "python": {
              "module": "aws_cdk.aws_nimblestudio"
            }
          }
        },
        "aws-cdk-lib.aws_oam": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Oam"
            },
            "java": {
              "package": "software.amazon.awscdk.services.oam"
            },
            "python": {
              "module": "aws_cdk.aws_oam"
            }
          }
        },
        "aws-cdk-lib.aws_omics": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Omics"
            },
            "java": {
              "package": "software.amazon.awscdk.services.omics"
            },
            "python": {
              "module": "aws_cdk.aws_omics"
            }
          }
        },
        "aws-cdk-lib.aws_opensearchserverless": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.OpenSearchServerless"
            },
            "java": {
              "package": "software.amazon.awscdk.services.opensearchserverless"
            },
            "python": {
              "module": "aws_cdk.aws_opensearchserverless"
            }
          }
        },
        "aws-cdk-lib.aws_opensearchservice": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.OpenSearchService"
            },
            "java": {
              "package": "software.amazon.awscdk.services.opensearchservice"
            },
            "python": {
              "module": "aws_cdk.aws_opensearchservice"
            }
          }
        },
        "aws-cdk-lib.aws_opsworks": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.OpsWorks"
            },
            "java": {
              "package": "software.amazon.awscdk.services.opsworks"
            },
            "python": {
              "module": "aws_cdk.aws_opsworks"
            }
          }
        },
        "aws-cdk-lib.aws_opsworkscm": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.OpsWorksCM"
            },
            "java": {
              "package": "software.amazon.awscdk.services.opsworkscm"
            },
            "python": {
              "module": "aws_cdk.aws_opsworkscm"
            }
          }
        },
        "aws-cdk-lib.aws_organizations": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Organizations"
            },
            "java": {
              "package": "software.amazon.awscdk.services.organizations"
            },
            "python": {
              "module": "aws_cdk.aws_organizations"
            }
          }
        },
        "aws-cdk-lib.aws_osis": {
          "targets": {
            "dotnet": {
              "package": "Amazon.CDK.AWS.OSIS"
            },
            "java": {
              "package": "software.amazon.awscdk.services.osis"
            },
            "python": {
              "module": "aws_cdk.aws_osis"
            }
          }
        },
        "aws-cdk-lib.aws_panorama": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Panorama"
            },
            "java": {
              "package": "software.amazon.awscdk.services.panorama"
            },
            "python": {
              "module": "aws_cdk.aws_panorama"
            }
          }
        },
        "aws-cdk-lib.aws_pcaconnectorad": {
          "targets": {
            "dotnet": {
              "package": "Amazon.CDK.AWS.PCAConnectorAD"
            },
            "java": {
              "package": "software.amazon.awscdk.services.pcaconnectorad"
            },
            "python": {
              "module": "aws_cdk.aws_pcaconnectorad"
            }
          }
        },
        "aws-cdk-lib.aws_personalize": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Personalize"
            },
            "java": {
              "package": "software.amazon.awscdk.services.personalize"
            },
            "python": {
              "module": "aws_cdk.aws_personalize"
            }
          }
        },
        "aws-cdk-lib.aws_pinpoint": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Pinpoint"
            },
            "java": {
              "package": "software.amazon.awscdk.services.pinpoint"
            },
            "python": {
              "module": "aws_cdk.aws_pinpoint"
            }
          }
        },
        "aws-cdk-lib.aws_pinpointemail": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.PinpointEmail"
            },
            "java": {
              "package": "software.amazon.awscdk.services.pinpointemail"
            },
            "python": {
              "module": "aws_cdk.aws_pinpointemail"
            }
          }
        },
        "aws-cdk-lib.aws_pipes": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Pipes"
            },
            "java": {
              "package": "software.amazon.awscdk.services.pipes"
            },
            "python": {
              "module": "aws_cdk.aws_pipes"
            }
          }
        },
        "aws-cdk-lib.aws_proton": {
          "targets": {
            "dotnet": {
              "package": "Amazon.CDK.AWS.Proton"
            },
            "java": {
              "package": "software.amazon.awscdk.services.proton"
            },
            "python": {
              "module": "aws_cdk.aws_proton"
            }
          }
        },
        "aws-cdk-lib.aws_qldb": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.QLDB"
            },
            "java": {
              "package": "software.amazon.awscdk.services.qldb"
            },
            "python": {
              "module": "aws_cdk.aws_qldb"
            }
          }
        },
        "aws-cdk-lib.aws_quicksight": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.QuickSight"
            },
            "java": {
              "package": "software.amazon.awscdk.services.quicksight"
            },
            "python": {
              "module": "aws_cdk.aws_quicksight"
            }
          }
        },
        "aws-cdk-lib.aws_ram": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.RAM"
            },
            "java": {
              "package": "software.amazon.awscdk.services.ram"
            },
            "python": {
              "module": "aws_cdk.aws_ram"
            }
          }
        },
        "aws-cdk-lib.aws_rds": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.RDS"
            },
            "java": {
              "package": "software.amazon.awscdk.services.rds"
            },
            "python": {
              "module": "aws_cdk.aws_rds"
            }
          }
        },
        "aws-cdk-lib.aws_redshift": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Redshift"
            },
            "java": {
              "package": "software.amazon.awscdk.services.redshift"
            },
            "python": {
              "module": "aws_cdk.aws_redshift"
            }
          }
        },
        "aws-cdk-lib.aws_redshiftserverless": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.RedshiftServerless"
            },
            "java": {
              "package": "software.amazon.awscdk.services.redshiftserverless"
            },
            "python": {
              "module": "aws_cdk.aws_redshiftserverless"
            }
          }
        },
        "aws-cdk-lib.aws_refactorspaces": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.RefactorSpaces"
            },
            "java": {
              "package": "software.amazon.awscdk.services.refactorspaces"
            },
            "python": {
              "module": "aws_cdk.aws_refactorspaces"
            }
          }
        },
        "aws-cdk-lib.aws_rekognition": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Rekognition"
            },
            "java": {
              "package": "software.amazon.awscdk.services.rekognition"
            },
            "python": {
              "module": "aws_cdk.aws_rekognition"
            }
          }
        },
        "aws-cdk-lib.aws_resiliencehub": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.ResilienceHub"
            },
            "java": {
              "package": "software.amazon.awscdk.services.resiliencehub"
            },
            "python": {
              "module": "aws_cdk.aws_resiliencehub"
            }
          }
        },
        "aws-cdk-lib.aws_resourceexplorer2": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.ResourceExplorer2"
            },
            "java": {
              "package": "software.amazon.awscdk.services.resourceexplorer2"
            },
            "python": {
              "module": "aws_cdk.aws_resourceexplorer2"
            }
          }
        },
        "aws-cdk-lib.aws_resourcegroups": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.ResourceGroups"
            },
            "java": {
              "package": "software.amazon.awscdk.services.resourcegroups"
            },
            "python": {
              "module": "aws_cdk.aws_resourcegroups"
            }
          }
        },
        "aws-cdk-lib.aws_robomaker": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.RoboMaker"
            },
            "java": {
              "package": "software.amazon.awscdk.services.robomaker"
            },
            "python": {
              "module": "aws_cdk.aws_robomaker"
            }
          }
        },
        "aws-cdk-lib.aws_rolesanywhere": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.RolesAnywhere"
            },
            "java": {
              "package": "software.amazon.awscdk.services.rolesanywhere"
            },
            "python": {
              "module": "aws_cdk.aws_rolesanywhere"
            }
          }
        },
        "aws-cdk-lib.aws_route53": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Route53"
            },
            "java": {
              "package": "software.amazon.awscdk.services.route53"
            },
            "python": {
              "module": "aws_cdk.aws_route53"
            }
          }
        },
        "aws-cdk-lib.aws_route53_patterns": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Route53.Patterns"
            },
            "java": {
              "package": "software.amazon.awscdk.services.route53.patterns"
            },
            "python": {
              "module": "aws_cdk.aws_route53_patterns"
            }
          }
        },
        "aws-cdk-lib.aws_route53_targets": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Route53.Targets"
            },
            "java": {
              "package": "software.amazon.awscdk.services.route53.targets"
            },
            "python": {
              "module": "aws_cdk.aws_route53_targets"
            }
          }
        },
        "aws-cdk-lib.aws_route53recoverycontrol": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Route53RecoveryControl"
            },
            "java": {
              "package": "software.amazon.awscdk.services.route53recoverycontrol"
            },
            "python": {
              "module": "aws_cdk.aws_route53recoverycontrol"
            }
          }
        },
        "aws-cdk-lib.aws_route53recoveryreadiness": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Route53RecoveryReadiness"
            },
            "java": {
              "package": "software.amazon.awscdk.services.route53recoveryreadiness"
            },
            "python": {
              "module": "aws_cdk.aws_route53recoveryreadiness"
            }
          }
        },
        "aws-cdk-lib.aws_route53resolver": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Route53Resolver"
            },
            "java": {
              "package": "software.amazon.awscdk.services.route53resolver"
            },
            "python": {
              "module": "aws_cdk.aws_route53resolver"
            }
          }
        },
        "aws-cdk-lib.aws_rum": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.RUM"
            },
            "java": {
              "package": "software.amazon.awscdk.services.rum"
            },
            "python": {
              "module": "aws_cdk.aws_rum"
            }
          }
        },
        "aws-cdk-lib.aws_s3": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.S3"
            },
            "java": {
              "package": "software.amazon.awscdk.services.s3"
            },
            "python": {
              "module": "aws_cdk.aws_s3"
            }
          }
        },
        "aws-cdk-lib.aws_s3_assets": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.S3.Assets"
            },
            "java": {
              "package": "software.amazon.awscdk.services.s3.assets"
            },
            "python": {
              "module": "aws_cdk.aws_s3_assets"
            }
          }
        },
        "aws-cdk-lib.aws_s3_deployment": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.S3.Deployment"
            },
            "java": {
              "package": "software.amazon.awscdk.services.s3.deployment"
            },
            "python": {
              "module": "aws_cdk.aws_s3_deployment"
            }
          }
        },
        "aws-cdk-lib.aws_s3_notifications": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.S3.Notifications"
            },
            "java": {
              "package": "software.amazon.awscdk.services.s3.notifications"
            },
            "python": {
              "module": "aws_cdk.aws_s3_notifications"
            }
          }
        },
        "aws-cdk-lib.aws_s3express": {
          "targets": {
            "dotnet": {
              "package": "Amazon.CDK.AWS.S3Express"
            },
            "java": {
              "package": "software.amazon.awscdk.services.s3express"
            },
            "python": {
              "module": "aws_cdk.aws_s3express"
            }
          }
        },
        "aws-cdk-lib.aws_s3objectlambda": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.S3ObjectLambda"
            },
            "java": {
              "package": "software.amazon.awscdk.services.s3objectlambda"
            },
            "python": {
              "module": "aws_cdk.aws_s3objectlambda"
            }
          }
        },
        "aws-cdk-lib.aws_s3outposts": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.S3Outposts"
            },
            "java": {
              "package": "software.amazon.awscdk.services.s3outposts"
            },
            "python": {
              "module": "aws_cdk.aws_s3outposts"
            }
          }
        },
        "aws-cdk-lib.aws_sagemaker": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Sagemaker"
            },
            "java": {
              "package": "software.amazon.awscdk.services.sagemaker"
            },
            "python": {
              "module": "aws_cdk.aws_sagemaker"
            }
          }
        },
        "aws-cdk-lib.aws_sam": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.SAM"
            },
            "java": {
              "package": "software.amazon.awscdk.services.sam"
            },
            "python": {
              "module": "aws_cdk.aws_sam"
            }
          }
        },
        "aws-cdk-lib.aws_scheduler": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Scheduler"
            },
            "java": {
              "package": "software.amazon.awscdk.services.scheduler"
            },
            "python": {
              "module": "aws_cdk.aws_scheduler"
            }
          }
        },
        "aws-cdk-lib.aws_sdb": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.SDB"
            },
            "java": {
              "package": "software.amazon.awscdk.services.sdb"
            },
            "python": {
              "module": "aws_cdk.aws_sdb"
            }
          }
        },
        "aws-cdk-lib.aws_secretsmanager": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.SecretsManager"
            },
            "java": {
              "package": "software.amazon.awscdk.services.secretsmanager"
            },
            "python": {
              "module": "aws_cdk.aws_secretsmanager"
            }
          }
        },
        "aws-cdk-lib.aws_securityhub": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.SecurityHub"
            },
            "java": {
              "package": "software.amazon.awscdk.services.securityhub"
            },
            "python": {
              "module": "aws_cdk.aws_securityhub"
            }
          }
        },
        "aws-cdk-lib.aws_servicecatalog": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Servicecatalog"
            },
            "java": {
              "package": "software.amazon.awscdk.services.servicecatalog"
            },
            "python": {
              "module": "aws_cdk.aws_servicecatalog"
            }
          }
        },
        "aws-cdk-lib.aws_servicecatalogappregistry": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Servicecatalogappregistry"
            },
            "java": {
              "package": "software.amazon.awscdk.services.servicecatalogappregistry"
            },
            "python": {
              "module": "aws_cdk.aws_servicecatalogappregistry"
            }
          }
        },
        "aws-cdk-lib.aws_servicediscovery": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.ServiceDiscovery"
            },
            "java": {
              "package": "software.amazon.awscdk.services.servicediscovery"
            },
            "python": {
              "module": "aws_cdk.aws_servicediscovery"
            }
          }
        },
        "aws-cdk-lib.aws_ses": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.SES"
            },
            "java": {
              "package": "software.amazon.awscdk.services.ses"
            },
            "python": {
              "module": "aws_cdk.aws_ses"
            }
          }
        },
        "aws-cdk-lib.aws_ses_actions": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.SES.Actions"
            },
            "java": {
              "package": "software.amazon.awscdk.services.ses.actions"
            },
            "python": {
              "module": "aws_cdk.aws_ses_actions"
            }
          }
        },
        "aws-cdk-lib.aws_shield": {
          "targets": {
            "dotnet": {
              "package": "Amazon.CDK.AWS.Shield"
            },
            "java": {
              "package": "software.amazon.awscdk.services.shield"
            },
            "python": {
              "module": "aws_cdk.aws_shield"
            }
          }
        },
        "aws-cdk-lib.aws_signer": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Signer"
            },
            "java": {
              "package": "software.amazon.awscdk.services.signer"
            },
            "python": {
              "module": "aws_cdk.aws_signer"
            }
          }
        },
        "aws-cdk-lib.aws_simspaceweaver": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.SimSpaceWeaver"
            },
            "java": {
              "package": "software.amazon.awscdk.services.simspaceweaver"
            },
            "python": {
              "module": "aws_cdk.aws_simspaceweaver"
            }
          }
        },
        "aws-cdk-lib.aws_sns": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.SNS"
            },
            "java": {
              "package": "software.amazon.awscdk.services.sns"
            },
            "python": {
              "module": "aws_cdk.aws_sns"
            }
          }
        },
        "aws-cdk-lib.aws_sns_subscriptions": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.SNS.Subscriptions"
            },
            "java": {
              "package": "software.amazon.awscdk.services.sns.subscriptions"
            },
            "python": {
              "module": "aws_cdk.aws_sns_subscriptions"
            }
          }
        },
        "aws-cdk-lib.aws_sqs": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.SQS"
            },
            "java": {
              "package": "software.amazon.awscdk.services.sqs"
            },
            "python": {
              "module": "aws_cdk.aws_sqs"
            }
          }
        },
        "aws-cdk-lib.aws_ssm": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.SSM"
            },
            "java": {
              "package": "software.amazon.awscdk.services.ssm"
            },
            "python": {
              "module": "aws_cdk.aws_ssm"
            }
          }
        },
        "aws-cdk-lib.aws_ssmcontacts": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.SSMContacts"
            },
            "java": {
              "package": "software.amazon.awscdk.services.ssmcontacts"
            },
            "python": {
              "module": "aws_cdk.aws_ssmcontacts"
            }
          }
        },
        "aws-cdk-lib.aws_ssmincidents": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.SSMIncidents"
            },
            "java": {
              "package": "software.amazon.awscdk.services.ssmincidents"
            },
            "python": {
              "module": "aws_cdk.aws_ssmincidents"
            }
          }
        },
        "aws-cdk-lib.aws_sso": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.SSO"
            },
            "java": {
              "package": "software.amazon.awscdk.services.sso"
            },
            "python": {
              "module": "aws_cdk.aws_sso"
            }
          }
        },
        "aws-cdk-lib.aws_stepfunctions": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.StepFunctions"
            },
            "java": {
              "package": "software.amazon.awscdk.services.stepfunctions"
            },
            "python": {
              "module": "aws_cdk.aws_stepfunctions"
            }
          }
        },
        "aws-cdk-lib.aws_stepfunctions_tasks": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.StepFunctions.Tasks"
            },
            "java": {
              "package": "software.amazon.awscdk.services.stepfunctions.tasks"
            },
            "python": {
              "module": "aws_cdk.aws_stepfunctions_tasks"
            }
          }
        },
        "aws-cdk-lib.aws_supportapp": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.SupportApp"
            },
            "java": {
              "package": "software.amazon.awscdk.services.supportapp"
            },
            "python": {
              "module": "aws_cdk.aws_supportapp"
            }
          }
        },
        "aws-cdk-lib.aws_synthetics": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Synthetics"
            },
            "java": {
              "package": "software.amazon.awscdk.services.synthetics"
            },
            "python": {
              "module": "aws_cdk.aws_synthetics"
            }
          }
        },
        "aws-cdk-lib.aws_systemsmanagersap": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.SystemsManagerSAP"
            },
            "java": {
              "package": "software.amazon.awscdk.services.systemsmanagersap"
            },
            "python": {
              "module": "aws_cdk.aws_systemsmanagersap"
            }
          }
        },
        "aws-cdk-lib.aws_timestream": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Timestream"
            },
            "java": {
              "package": "software.amazon.awscdk.services.timestream"
            },
            "python": {
              "module": "aws_cdk.aws_timestream"
            }
          }
        },
        "aws-cdk-lib.aws_transfer": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Transfer"
            },
            "java": {
              "package": "software.amazon.awscdk.services.transfer"
            },
            "python": {
              "module": "aws_cdk.aws_transfer"
            }
          }
        },
        "aws-cdk-lib.aws_verifiedpermissions": {
          "targets": {
            "dotnet": {
              "package": "Amazon.CDK.AWS.VerifiedPermissions"
            },
            "java": {
              "package": "software.amazon.awscdk.services.verifiedpermissions"
            },
            "python": {
              "module": "aws_cdk.aws_verifiedpermissions"
            }
          }
        },
        "aws-cdk-lib.aws_voiceid": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.VoiceID"
            },
            "java": {
              "package": "software.amazon.awscdk.services.voiceid"
            },
            "python": {
              "module": "aws_cdk.aws_voiceid"
            }
          }
        },
        "aws-cdk-lib.aws_vpclattice": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.VpcLattice"
            },
            "java": {
              "package": "software.amazon.awscdk.services.vpclattice"
            },
            "python": {
              "module": "aws_cdk.aws_vpclattice"
            }
          }
        },
        "aws-cdk-lib.aws_waf": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.WAF"
            },
            "java": {
              "package": "software.amazon.awscdk.services.waf"
            },
            "python": {
              "module": "aws_cdk.aws_waf"
            }
          }
        },
        "aws-cdk-lib.aws_wafregional": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.WAFRegional"
            },
            "java": {
              "package": "software.amazon.awscdk.services.waf.regional"
            },
            "python": {
              "module": "aws_cdk.aws_wafregional"
            }
          }
        },
        "aws-cdk-lib.aws_wafv2": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.WAFv2"
            },
            "java": {
              "package": "software.amazon.awscdk.services.wafv2"
            },
            "python": {
              "module": "aws_cdk.aws_wafv2"
            }
          }
        },
        "aws-cdk-lib.aws_wisdom": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Wisdom"
            },
            "java": {
              "package": "software.amazon.awscdk.services.wisdom"
            },
            "python": {
              "module": "aws_cdk.aws_wisdom"
            }
          }
        },
        "aws-cdk-lib.aws_workspaces": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.WorkSpaces"
            },
            "java": {
              "package": "software.amazon.awscdk.services.workspaces"
            },
            "python": {
              "module": "aws_cdk.aws_workspaces"
            }
          }
        },
        "aws-cdk-lib.aws_workspacesthinclient": {
          "targets": {
            "dotnet": {
              "package": "Amazon.CDK.AWS.WorkSpacesThinClient"
            },
            "java": {
              "package": "software.amazon.awscdk.services.workspacesthinclient"
            },
            "python": {
              "module": "aws_cdk.aws_workspacesthinclient"
            }
          }
        },
        "aws-cdk-lib.aws_workspacesweb": {
          "targets": {
            "dotnet": {
              "package": "Amazon.CDK.AWS.WorkSpacesWeb"
            },
            "java": {
              "package": "software.amazon.awscdk.services.workspacesweb"
            },
            "python": {
              "module": "aws_cdk.aws_workspacesweb"
            }
          }
        },
        "aws-cdk-lib.aws_xray": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.XRay"
            },
            "java": {
              "package": "software.amazon.awscdk.services.xray"
            },
            "python": {
              "module": "aws_cdk.aws_xray"
            }
          }
        },
        "aws-cdk-lib.cloud_assembly_schema": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.CloudAssembly.Schema"
            },
            "java": {
              "package": "software.amazon.awscdk.cloudassembly.schema"
            },
            "python": {
              "module": "aws_cdk.cloud_assembly_schema"
            }
          }
        },
        "aws-cdk-lib.cloudformation_include": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.CloudFormation.Include"
            },
            "java": {
              "package": "software.amazon.awscdk.cloudformation.include"
            },
            "python": {
              "module": "aws_cdk.cloudformation_include"
            }
          }
        },
        "aws-cdk-lib.custom_resources": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.CustomResources"
            },
            "java": {
              "package": "software.amazon.awscdk.customresources"
            },
            "python": {
              "module": "aws_cdk.custom_resources"
            }
          }
        },
        "aws-cdk-lib.cx_api": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.CXAPI"
            },
            "java": {
              "package": "software.amazon.awscdk.cxapi"
            },
            "python": {
              "module": "aws_cdk.cx_api"
            }
          }
        },
        "aws-cdk-lib.lambda_layer_awscli": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.LambdaLayer.AwsCli"
            },
            "java": {
              "package": "software.amazon.awscdk.lambdalayer.awscli"
            },
            "python": {
              "module": "aws_cdk.lambda_layer_awscli"
            }
          }
        },
        "aws-cdk-lib.lambda_layer_kubectl": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.LambdaLayer.Kubectl"
            },
            "java": {
              "package": "software.amazon.awscdk.lambdalayer.kubectl"
            },
            "python": {
              "module": "aws_cdk.lambda_layer_kubectl"
            }
          }
        },
        "aws-cdk-lib.lambda_layer_node_proxy_agent": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.LambdaLayer.NodeProxyAgent"
            },
            "java": {
              "package": "software.amazon.awscdk.lambda.layer.node.proxy.agent"
            },
            "python": {
              "module": "aws_cdk.lambda_layer_node_proxy_agent"
            }
          }
        },
        "aws-cdk-lib.pipelines": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.Pipelines"
            },
            "java": {
              "package": "software.amazon.awscdk.pipelines"
            },
            "python": {
              "module": "aws_cdk.pipelines"
            }
          }
        },
        "aws-cdk-lib.region_info": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.RegionInfo"
            },
            "java": {
              "package": "software.amazon.awscdk.regioninfo"
            },
            "python": {
              "module": "aws_cdk.region_info"
            }
          }
        },
        "aws-cdk-lib.triggers": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.Triggers"
            },
            "java": {
              "package": "software.amazon.awscdk.triggers"
            },
            "python": {
              "module": "aws_cdk.triggers"
            }
          }
        }
      },
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/main/logo/default-256-dark.png",
          "namespace": "Amazon.CDK",
          "packageId": "Amazon.CDK.Lib"
        },
        "go": {
          "moduleName": "github.com/aws/aws-cdk-go",
          "packageName": "awscdk"
        },
        "java": {
          "maven": {
            "artifactId": "aws-cdk-lib",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk"
        },
        "js": {
          "npm": "aws-cdk-lib"
        },
        "python": {
          "distName": "aws-cdk-lib",
          "module": "aws_cdk"
        }
      }
    },
    "constructs": {
      "targets": {
        "dotnet": {
          "namespace": "Constructs",
          "packageId": "Constructs"
        },
        "go": {
          "moduleName": "github.com/aws/constructs-go"
        },
        "java": {
          "maven": {
            "artifactId": "constructs",
            "groupId": "software.constructs"
          },
          "package": "software.constructs"
        },
        "js": {
          "npm": "constructs"
        },
        "python": {
          "distName": "constructs",
          "module": "constructs"
        }
      }
    }
  },
  "description": "Receipt rule actions for AWS IoT",
  "docs": {
    "stability": "experimental"
  },
  "homepage": "https://github.com/aws/aws-cdk",
  "jsiiVersion": "5.3.20 (build b624106)",
  "keywords": [
    "aws",
    "cdk",
    "constructs",
    "iot",
    "actions"
  ],
  "license": "Apache-2.0",
  "metadata": {
    "jsii": {
      "compiledWithDeprecationWarnings": true,
      "pacmak": {
        "hasDefaultInterfaces": true
      },
      "rosetta": {
        "strict": true
      }
    }
  },
  "name": "@aws-cdk/aws-iot-actions-alpha",
  "readme": {
    "markdown": "# Actions for AWS IoT Rule\n<!--BEGIN STABILITY BANNER-->\n\n---\n\n![cdk-constructs: Experimental](https://img.shields.io/badge/cdk--constructs-experimental-important.svg?style=for-the-badge)\n\n> The APIs of higher level constructs in this module are experimental and under active development.\n> They are subject to non-backward compatible changes or removal in any future version. These are\n> not subject to the [Semantic Versioning](https://semver.org/) model and breaking changes will be\n> announced in the release notes. This means that while you may use them, you may need to update\n> your source code when upgrading to a newer version of this package.\n\n---\n\n<!--END STABILITY BANNER-->\n\nThis library contains integration classes to send data to any number of\nsupported AWS Services. Instances of these classes should be passed to\n`TopicRule` defined in `aws-cdk-lib/aws-iot`.\n\nCurrently supported are:\n\n- Republish a message to another MQTT topic\n- Invoke a Lambda function\n- Put objects to a S3 bucket\n- Put logs to CloudWatch Logs\n- Capture CloudWatch metrics\n- Change state for a CloudWatch alarm\n- Put records to Kinesis Data stream\n- Put records to Kinesis Data Firehose stream\n- Send messages to SQS queues\n- Publish messages on SNS topics\n- Write messages into columns of DynamoDB\n- Put messages IoT Events input\n- Send messages to HTTPS endpoints\n\n## Republish a message to another MQTT topic\n\nThe code snippet below creates an AWS IoT Rule that republish a message to\nanother MQTT topic when it is triggered.\n\n```ts\nnew iot.TopicRule(this, 'TopicRule', {\n  sql: iot.IotSql.fromStringAsVer20160323(\"SELECT topic(2) as device_id, timestamp() as timestamp, temperature FROM 'device/+/data'\"),\n  actions: [\n    new actions.IotRepublishMqttAction('${topic()}/republish', {\n      qualityOfService: actions.MqttQualityOfService.AT_LEAST_ONCE, // optional property, default is MqttQualityOfService.ZERO_OR_MORE_TIMES\n    }),\n  ],\n});\n```\n\n## Invoke a Lambda function\n\nThe code snippet below creates an AWS IoT Rule that invoke a Lambda function\nwhen it is triggered.\n\n```ts\nconst func = new lambda.Function(this, 'MyFunction', {\n  runtime: lambda.Runtime.NODEJS_LATEST,\n  handler: 'index.handler',\n  code: lambda.Code.fromInline(`\n    exports.handler = (event) => {\n      console.log(\"It is test for lambda action of AWS IoT Rule.\", event);\n    };`\n  ),\n});\n\nnew iot.TopicRule(this, 'TopicRule', {\n  sql: iot.IotSql.fromStringAsVer20160323(\"SELECT topic(2) as device_id, timestamp() as timestamp, temperature FROM 'device/+/data'\"),\n  actions: [new actions.LambdaFunctionAction(func)],\n});\n```\n\n## Put objects to a S3 bucket\n\nThe code snippet below creates an AWS IoT Rule that puts objects to a S3 bucket\nwhen it is triggered.\n\n```ts\nconst bucket = new s3.Bucket(this, 'MyBucket');\n\nnew iot.TopicRule(this, 'TopicRule', {\n  sql: iot.IotSql.fromStringAsVer20160323(\"SELECT topic(2) as device_id FROM 'device/+/data'\"),\n  actions: [new actions.S3PutObjectAction(bucket)],\n});\n```\n\nThe property `key` of `S3PutObjectAction` is given the value `${topic()}/${timestamp()}` by default. This `${topic()}`\nand `${timestamp()}` is called Substitution templates. For more information see\n[this documentation](https://docs.aws.amazon.com/iot/latest/developerguide/iot-substitution-templates.html).\nIn above sample, `${topic()}` is replaced by a given MQTT topic as `device/001/data`. And `${timestamp()}` is replaced\nby the number of the current timestamp in milliseconds as `1636289461203`. So if the MQTT broker receives an MQTT topic\n`device/001/data` on `2021-11-07T00:00:00.000Z`, the S3 bucket object will be put to `device/001/data/1636243200000`.\n\nYou can also set specific `key` as following:\n\n```ts\nconst bucket = new s3.Bucket(this, 'MyBucket');\n\nnew iot.TopicRule(this, 'TopicRule', {\n  sql: iot.IotSql.fromStringAsVer20160323(\n    \"SELECT topic(2) as device_id, year, month, day FROM 'device/+/data'\",\n  ),\n  actions: [\n    new actions.S3PutObjectAction(bucket, {\n      key: '${year}/${month}/${day}/${topic(2)}',\n    }),\n  ],\n});\n```\n\nIf you wanna set access control to the S3 bucket object, you can specify `accessControl` as following:\n\n```ts\nconst bucket = new s3.Bucket(this, 'MyBucket');\n\nnew iot.TopicRule(this, 'TopicRule', {\n  sql: iot.IotSql.fromStringAsVer20160323(\"SELECT * FROM 'device/+/data'\"),\n  actions: [\n    new actions.S3PutObjectAction(bucket, {\n      accessControl: s3.BucketAccessControl.PUBLIC_READ,\n    }),\n  ],\n});\n```\n\n## Put logs to CloudWatch Logs\n\nThe code snippet below creates an AWS IoT Rule that puts logs to CloudWatch Logs\nwhen it is triggered.\n\n```ts\nimport * as logs from 'aws-cdk-lib/aws-logs';\n\nconst logGroup = new logs.LogGroup(this, 'MyLogGroup');\n\nnew iot.TopicRule(this, 'TopicRule', {\n  sql: iot.IotSql.fromStringAsVer20160323(\"SELECT topic(2) as device_id FROM 'device/+/data'\"),\n  actions: [new actions.CloudWatchLogsAction(logGroup)],\n});\n```\n\n## Capture CloudWatch metrics\n\nThe code snippet below creates an AWS IoT Rule that capture CloudWatch metrics\nwhen it is triggered.\n\n```ts\nconst topicRule = new iot.TopicRule(this, 'TopicRule', {\n  sql: iot.IotSql.fromStringAsVer20160323(\n    \"SELECT topic(2) as device_id, namespace, unit, value, timestamp FROM 'device/+/data'\",\n  ),\n  actions: [\n    new actions.CloudWatchPutMetricAction({\n      metricName: '${topic(2)}',\n      metricNamespace: '${namespace}',\n      metricUnit: '${unit}',\n      metricValue: '${value}',\n      metricTimestamp: '${timestamp}',\n    }),\n  ],\n});\n```\n\n## Start Step Functions State Machine\n\nThe code snippet below creates an AWS IoT Rule that starts a Step Functions State Machine\nwhen it is triggered.\n\n```ts\nconst stateMachine = new stepfunctions.StateMachine(this, 'SM', {\n  definitionBody: stepfunctions.DefinitionBody.fromChainable(new stepfunctions.Wait(this, 'Hello', { time: stepfunctions.WaitTime.duration(Duration.seconds(10)) })),\n});\n\nnew iot.TopicRule(this, 'TopicRule', {\n  sql: iot.IotSql.fromStringAsVer20160323(\"SELECT * FROM 'device/+/data'\"),\n  actions: [\n    new actions.StepFunctionsStateMachineAction(stateMachine),\n  ],\n});\n```\n\n## Change the state of an Amazon CloudWatch alarm\n\nThe code snippet below creates an AWS IoT Rule that changes the state of an Amazon CloudWatch alarm when it is triggered:\n\n```ts\nimport * as cloudwatch from 'aws-cdk-lib/aws-cloudwatch';\n\nconst metric = new cloudwatch.Metric({\n  namespace: 'MyNamespace',\n  metricName: 'MyMetric',\n  dimensionsMap: { MyDimension: 'MyDimensionValue' },\n});\nconst alarm = new cloudwatch.Alarm(this, 'MyAlarm', {\n  metric: metric,\n  threshold: 100,\n  evaluationPeriods: 3,\n  datapointsToAlarm: 2,\n});\n\nconst topicRule = new iot.TopicRule(this, 'TopicRule', {\n  sql: iot.IotSql.fromStringAsVer20160323(\"SELECT topic(2) as device_id FROM 'device/+/data'\"),\n  actions: [\n    new actions.CloudWatchSetAlarmStateAction(alarm, {\n      reason: 'AWS Iot Rule action is triggered',\n      alarmStateToSet: cloudwatch.AlarmState.ALARM,\n    }),\n  ],\n});\n```\n\n## Put records to Kinesis Data stream\n\nThe code snippet below creates an AWS IoT Rule that puts records to Kinesis Data\nstream when it is triggered.\n\n```ts\nimport * as kinesis from 'aws-cdk-lib/aws-kinesis';\n\nconst stream = new kinesis.Stream(this, 'MyStream');\n\nconst topicRule = new iot.TopicRule(this, 'TopicRule', {\n  sql: iot.IotSql.fromStringAsVer20160323(\"SELECT * FROM 'device/+/data'\"),\n  actions: [\n    new actions.KinesisPutRecordAction(stream, {\n      partitionKey: '${newuuid()}',\n    }),\n  ],\n});\n```\n\n## Put records to Kinesis Data Firehose stream\n\nThe code snippet below creates an AWS IoT Rule that puts records to Put records\nto Kinesis Data Firehose stream when it is triggered.\n\n```ts\nimport * as firehose from '@aws-cdk/aws-kinesisfirehose-alpha';\nimport * as destinations from '@aws-cdk/aws-kinesisfirehose-destinations-alpha';\n\nconst bucket = new s3.Bucket(this, 'MyBucket');\nconst stream = new firehose.DeliveryStream(this, 'MyStream', {\n  destinations: [new destinations.S3Bucket(bucket)],\n});\n\nconst topicRule = new iot.TopicRule(this, 'TopicRule', {\n  sql: iot.IotSql.fromStringAsVer20160323(\"SELECT * FROM 'device/+/data'\"),\n  actions: [\n    new actions.FirehosePutRecordAction(stream, {\n      batchMode: true,\n      recordSeparator: actions.FirehoseRecordSeparator.NEWLINE,\n    }),\n  ],\n});\n```\n\n## Send messages to an SQS queue\n\nThe code snippet below creates an AWS IoT Rule that send messages\nto an SQS queue when it is triggered:\n\n```ts\nimport * as sqs from 'aws-cdk-lib/aws-sqs';\n\nconst queue = new sqs.Queue(this, 'MyQueue');\n\nconst topicRule = new iot.TopicRule(this, 'TopicRule', {\n  sql: iot.IotSql.fromStringAsVer20160323(\n    \"SELECT topic(2) as device_id, year, month, day FROM 'device/+/data'\",\n  ),\n  actions: [\n    new actions.SqsQueueAction(queue, {\n      useBase64: true, // optional property, default is 'false'\n    }),\n  ],\n});\n```\n\n## Publish messages on an SNS topic\n\nThe code snippet below creates and AWS IoT Rule that publishes messages to an SNS topic when it is triggered:\n\n```ts\nimport * as sns from 'aws-cdk-lib/aws-sns';\n\nconst topic = new sns.Topic(this, 'MyTopic');\n\nconst topicRule = new iot.TopicRule(this, 'TopicRule', {\n  sql: iot.IotSql.fromStringAsVer20160323(\n    \"SELECT topic(2) as device_id, year, month, day FROM 'device/+/data'\",\n  ),\n  actions: [\n    new actions.SnsTopicAction(topic, {\n      messageFormat: actions.SnsActionMessageFormat.JSON, // optional property, default is SnsActionMessageFormat.RAW\n    }),\n  ],\n});\n```\n\n## Write attributes of a message to DynamoDB\n\nThe code snippet below creates an AWS IoT rule that writes all or part of an\nMQTT message to DynamoDB using the DynamoDBv2 action.\n\n```ts\nimport * as dynamodb from 'aws-cdk-lib/aws-dynamodb';\n\ndeclare const table: dynamodb.Table;\n\nconst topicRule = new iot.TopicRule(this, 'TopicRule', {\n  sql: iot.IotSql.fromStringAsVer20160323(\n    \"SELECT * FROM 'device/+/data'\",\n  ),\n  actions: [\n    new actions.DynamoDBv2PutItemAction(table)\n  ],\n});\n```\n\n## Put messages IoT Events input\n\nThe code snippet below creates an AWS IoT Rule that puts messages\nto an IoT Events input when it is triggered:\n\n```ts\nimport * as iotevents from '@aws-cdk/aws-iotevents-alpha';\nimport * as iam from 'aws-cdk-lib/aws-iam';\n\ndeclare const role: iam.IRole;\n\nconst input = new iotevents.Input(this, 'MyInput', {\n  attributeJsonPaths: ['payload.temperature', 'payload.transactionId'],\n});\nconst topicRule = new iot.TopicRule(this, 'TopicRule', {\n  sql: iot.IotSql.fromStringAsVer20160323(\n    \"SELECT * FROM 'device/+/data'\",\n  ),\n  actions: [\n    new actions.IotEventsPutMessageAction(input, {\n      batchMode: true, // optional property, default is 'false'\n      messageId: '${payload.transactionId}', // optional property, default is a new UUID\n      role: role, // optional property, default is a new UUID\n    }),\n  ],\n});\n```\n\n## Send Messages to HTTPS Endpoints\n\nThe code snippet below creates an AWS IoT Rule that sends messages\nto an HTTPS endpoint when it is triggered:\n\n```ts\nconst topicRule = new iot.TopicRule(this, 'TopicRule', {\n  sql: iot.IotSql.fromStringAsVer20160323(\n    \"SELECT topic(2) as device_id, year, month, day FROM 'device/+/data'\",\n  ),\n});\n\ntopicRule.addAction(\n  new actions.HttpsAction('https://example.com/endpoint', {\n    confirmationUrl: 'https://example.com',\n    headers: [\n      { key: 'key0', value: 'value0' },\n      { key: 'key1', value: 'value1' },\n    ],\n    auth: { serviceName: 'serviceName', signingRegion: 'us-east-1' },\n  }),\n);\n```\n\n## Write Data to Open Search Service\n\nThe code snippet below creates an AWS IoT Rule that writes data\nto an Open Search Service when it is triggered:\n\n```ts\nimport * as opensearch from 'aws-cdk-lib/aws-opensearchservice';\ndeclare const domain: opensearch.Domain;\n\nconst topicRule = new iot.TopicRule(this, 'TopicRule', {\n  sql: iot.IotSql.fromStringAsVer20160323(\n    \"SELECT topic(2) as device_id, year, month, day FROM 'device/+/data'\",\n  ),\n});\n\ntopicRule.addAction(new actions.OpenSearchAction(domain, {\n  id: 'my-id',\n  index: 'my-index',\n  type: 'my-type',\n}));\n```\n"
  },
  "repository": {
    "directory": "packages/@aws-cdk/aws-iot-actions-alpha",
    "type": "git",
    "url": "https://github.com/aws/aws-cdk.git"
  },
  "schema": "jsii/0.10.0",
  "targets": {
    "dotnet": {
      "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/main/logo/default-256-dark.png",
      "namespace": "Amazon.CDK.AWS.IoT.Actions.Alpha",
      "packageId": "Amazon.CDK.AWS.IoT.Actions.Alpha"
    },
    "go": {
      "moduleName": "github.com/aws/aws-cdk-go",
      "packageName": "awscdkiotactionsalpha"
    },
    "java": {
      "maven": {
        "artifactId": "iot-actions-alpha",
        "groupId": "software.amazon.awscdk"
      },
      "package": "software.amazon.awscdk.services.iot.actions.alpha"
    },
    "js": {
      "npm": "@aws-cdk/aws-iot-actions-alpha"
    },
    "python": {
      "classifiers": [
        "Framework :: AWS CDK",
        "Framework :: AWS CDK :: 2"
      ],
      "distName": "aws-cdk.aws-iot-actions-alpha",
      "module": "aws_cdk.aws_iot_actions_alpha"
    }
  },
  "types": {
    "@aws-cdk/aws-iot-actions-alpha.CloudWatchLogsAction": {
      "assembly": "@aws-cdk/aws-iot-actions-alpha",
      "docs": {
        "stability": "experimental",
        "summary": "The action to send data to Amazon CloudWatch Logs.",
        "example": "import * as logs from 'aws-cdk-lib/aws-logs';\n\nconst logGroup = new logs.LogGroup(this, 'MyLogGroup');\n\nnew iot.TopicRule(this, 'TopicRule', {\n  sql: iot.IotSql.fromStringAsVer20160323(\"SELECT topic(2) as device_id, timestamp() as timestamp FROM 'device/+/data'\"),\n  errorAction: new actions.CloudWatchLogsAction(logGroup),\n});",
        "custom": {
          "exampleMetadata": "infused"
        }
      },
      "fqn": "@aws-cdk/aws-iot-actions-alpha.CloudWatchLogsAction",
      "initializer": {
        "docs": {
          "stability": "experimental"
        },
        "locationInModule": {
          "filename": "lib/cloudwatch-logs-action.ts",
          "line": 23
        },
        "parameters": [
          {
            "docs": {
              "summary": "The CloudWatch log group to which the action sends data."
            },
            "name": "logGroup",
            "type": {
              "fqn": "aws-cdk-lib.aws_logs.ILogGroup"
            }
          },
          {
            "docs": {
              "summary": "Optional properties to not use default."
            },
            "name": "props",
            "optional": true,
            "type": {
              "fqn": "@aws-cdk/aws-iot-actions-alpha.CloudWatchLogsActionProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/aws-iot-alpha.IAction"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/cloudwatch-logs-action.ts",
        "line": 16
      },
      "name": "CloudWatchLogsAction",
      "symbolId": "lib/cloudwatch-logs-action:CloudWatchLogsAction"
    },
    "@aws-cdk/aws-iot-actions-alpha.CloudWatchLogsActionProps": {
      "assembly": "@aws-cdk/aws-iot-actions-alpha",
      "datatype": true,
      "docs": {
        "stability": "experimental",
        "summary": "Configuration properties of an action for CloudWatch Logs.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as iot_actions_alpha from '@aws-cdk/aws-iot-actions-alpha';\nimport { aws_iam as iam } from 'aws-cdk-lib';\n\ndeclare const role: iam.Role;\nconst cloudWatchLogsActionProps: iot_actions_alpha.CloudWatchLogsActionProps = {\n  role: role,\n};",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-iot-actions-alpha.CloudWatchLogsActionProps",
      "interfaces": [
        "@aws-cdk/aws-iot-actions-alpha.CommonActionProps"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/cloudwatch-logs-action.ts",
        "line": 10
      },
      "name": "CloudWatchLogsActionProps",
      "symbolId": "lib/cloudwatch-logs-action:CloudWatchLogsActionProps"
    },
    "@aws-cdk/aws-iot-actions-alpha.CloudWatchPutMetricAction": {
      "assembly": "@aws-cdk/aws-iot-actions-alpha",
      "docs": {
        "stability": "experimental",
        "summary": "The action to capture an Amazon CloudWatch metric.",
        "example": "const topicRule = new iot.TopicRule(this, 'TopicRule', {\n  sql: iot.IotSql.fromStringAsVer20160323(\n    \"SELECT topic(2) as device_id, namespace, unit, value, timestamp FROM 'device/+/data'\",\n  ),\n  actions: [\n    new actions.CloudWatchPutMetricAction({\n      metricName: '${topic(2)}',\n      metricNamespace: '${namespace}',\n      metricUnit: '${unit}',\n      metricValue: '${value}',\n      metricTimestamp: '${timestamp}',\n    }),\n  ],\n});",
        "custom": {
          "exampleMetadata": "infused"
        }
      },
      "fqn": "@aws-cdk/aws-iot-actions-alpha.CloudWatchPutMetricAction",
      "initializer": {
        "docs": {
          "stability": "experimental"
        },
        "locationInModule": {
          "filename": "lib/cloudwatch-put-metric-action.ts",
          "line": 57
        },
        "parameters": [
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-iot-actions-alpha.CloudWatchPutMetricActionProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/aws-iot-alpha.IAction"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/cloudwatch-put-metric-action.ts",
        "line": 56
      },
      "name": "CloudWatchPutMetricAction",
      "symbolId": "lib/cloudwatch-put-metric-action:CloudWatchPutMetricAction"
    },
    "@aws-cdk/aws-iot-actions-alpha.CloudWatchPutMetricActionProps": {
      "assembly": "@aws-cdk/aws-iot-actions-alpha",
      "datatype": true,
      "docs": {
        "stability": "experimental",
        "summary": "Configuration properties of an action for CloudWatch metric.",
        "example": "const topicRule = new iot.TopicRule(this, 'TopicRule', {\n  sql: iot.IotSql.fromStringAsVer20160323(\n    \"SELECT topic(2) as device_id, namespace, unit, value, timestamp FROM 'device/+/data'\",\n  ),\n  actions: [\n    new actions.CloudWatchPutMetricAction({\n      metricName: '${topic(2)}',\n      metricNamespace: '${namespace}',\n      metricUnit: '${unit}',\n      metricValue: '${value}',\n      metricTimestamp: '${timestamp}',\n    }),\n  ],\n});",
        "custom": {
          "exampleMetadata": "infused"
        }
      },
      "fqn": "@aws-cdk/aws-iot-actions-alpha.CloudWatchPutMetricActionProps",
      "interfaces": [
        "@aws-cdk/aws-iot-actions-alpha.CommonActionProps"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/cloudwatch-put-metric-action.ts",
        "line": 9
      },
      "name": "CloudWatchPutMetricActionProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "Supports substitution templates.",
            "see": "https://docs.aws.amazon.com/iot/latest/developerguide/iot-substitution-templates.html",
            "stability": "experimental",
            "summary": "The CloudWatch metric name."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudwatch-put-metric-action.ts",
            "line": 16
          },
          "name": "metricName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Supports substitution templates.",
            "see": "https://docs.aws.amazon.com/iot/latest/developerguide/iot-substitution-templates.html",
            "stability": "experimental",
            "summary": "The CloudWatch metric namespace name."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudwatch-put-metric-action.ts",
            "line": 24
          },
          "name": "metricNamespace",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Supports substitution templates.",
            "see": "https://docs.aws.amazon.com/iot/latest/developerguide/iot-substitution-templates.html",
            "stability": "experimental",
            "summary": "The metric unit supported by CloudWatch."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudwatch-put-metric-action.ts",
            "line": 42
          },
          "name": "metricUnit",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Supports substitution templates.",
            "see": "https://docs.aws.amazon.com/iot/latest/developerguide/iot-substitution-templates.html",
            "stability": "experimental",
            "summary": "A string that contains the CloudWatch metric value."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudwatch-put-metric-action.ts",
            "line": 50
          },
          "name": "metricValue",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- none -- Defaults to the current Unix epoch time.",
            "remarks": "Supports substitution templates.",
            "see": "https://docs.aws.amazon.com/iot/latest/developerguide/iot-substitution-templates.html",
            "stability": "experimental",
            "summary": "A string that contains the timestamp, expressed in seconds in Unix epoch time."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudwatch-put-metric-action.ts",
            "line": 34
          },
          "name": "metricTimestamp",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/cloudwatch-put-metric-action:CloudWatchPutMetricActionProps"
    },
    "@aws-cdk/aws-iot-actions-alpha.CloudWatchSetAlarmStateAction": {
      "assembly": "@aws-cdk/aws-iot-actions-alpha",
      "docs": {
        "stability": "experimental",
        "summary": "The action to change the state of an Amazon CloudWatch alarm.",
        "example": "import * as cloudwatch from 'aws-cdk-lib/aws-cloudwatch';\n\nconst metric = new cloudwatch.Metric({\n  namespace: 'MyNamespace',\n  metricName: 'MyMetric',\n  dimensionsMap: { MyDimension: 'MyDimensionValue' },\n});\nconst alarm = new cloudwatch.Alarm(this, 'MyAlarm', {\n  metric: metric,\n  threshold: 100,\n  evaluationPeriods: 3,\n  datapointsToAlarm: 2,\n});\n\nconst topicRule = new iot.TopicRule(this, 'TopicRule', {\n  sql: iot.IotSql.fromStringAsVer20160323(\"SELECT topic(2) as device_id FROM 'device/+/data'\"),\n  actions: [\n    new actions.CloudWatchSetAlarmStateAction(alarm, {\n      reason: 'AWS Iot Rule action is triggered',\n      alarmStateToSet: cloudwatch.AlarmState.ALARM,\n    }),\n  ],\n});",
        "custom": {
          "exampleMetadata": "infused"
        }
      },
      "fqn": "@aws-cdk/aws-iot-actions-alpha.CloudWatchSetAlarmStateAction",
      "initializer": {
        "docs": {
          "stability": "experimental"
        },
        "locationInModule": {
          "filename": "lib/cloudwatch-set-alarm-state-action.ts",
          "line": 28
        },
        "parameters": [
          {
            "name": "alarm",
            "type": {
              "fqn": "aws-cdk-lib.aws_cloudwatch.IAlarm"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-iot-actions-alpha.CloudWatchSetAlarmStateActionProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/aws-iot-alpha.IAction"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/cloudwatch-set-alarm-state-action.ts",
        "line": 27
      },
      "name": "CloudWatchSetAlarmStateAction",
      "symbolId": "lib/cloudwatch-set-alarm-state-action:CloudWatchSetAlarmStateAction"
    },
    "@aws-cdk/aws-iot-actions-alpha.CloudWatchSetAlarmStateActionProps": {
      "assembly": "@aws-cdk/aws-iot-actions-alpha",
      "datatype": true,
      "docs": {
        "stability": "experimental",
        "summary": "Configuration properties of an action for CloudWatch alarm.",
        "example": "import * as cloudwatch from 'aws-cdk-lib/aws-cloudwatch';\n\nconst metric = new cloudwatch.Metric({\n  namespace: 'MyNamespace',\n  metricName: 'MyMetric',\n  dimensionsMap: { MyDimension: 'MyDimensionValue' },\n});\nconst alarm = new cloudwatch.Alarm(this, 'MyAlarm', {\n  metric: metric,\n  threshold: 100,\n  evaluationPeriods: 3,\n  datapointsToAlarm: 2,\n});\n\nconst topicRule = new iot.TopicRule(this, 'TopicRule', {\n  sql: iot.IotSql.fromStringAsVer20160323(\"SELECT topic(2) as device_id FROM 'device/+/data'\"),\n  actions: [\n    new actions.CloudWatchSetAlarmStateAction(alarm, {\n      reason: 'AWS Iot Rule action is triggered',\n      alarmStateToSet: cloudwatch.AlarmState.ALARM,\n    }),\n  ],\n});",
        "custom": {
          "exampleMetadata": "infused"
        }
      },
      "fqn": "@aws-cdk/aws-iot-actions-alpha.CloudWatchSetAlarmStateActionProps",
      "interfaces": [
        "@aws-cdk/aws-iot-actions-alpha.CommonActionProps"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/cloudwatch-set-alarm-state-action.ts",
        "line": 10
      },
      "name": "CloudWatchSetAlarmStateActionProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "The value of the alarm state to set."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudwatch-set-alarm-state-action.ts",
            "line": 21
          },
          "name": "alarmStateToSet",
          "type": {
            "fqn": "aws-cdk-lib.aws_cloudwatch.AlarmState"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "None",
            "stability": "experimental",
            "summary": "The reason for the alarm change."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cloudwatch-set-alarm-state-action.ts",
            "line": 16
          },
          "name": "reason",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/cloudwatch-set-alarm-state-action:CloudWatchSetAlarmStateActionProps"
    },
    "@aws-cdk/aws-iot-actions-alpha.CommonActionProps": {
      "assembly": "@aws-cdk/aws-iot-actions-alpha",
      "datatype": true,
      "docs": {
        "stability": "experimental",
        "summary": "Common properties shared by Actions it access to AWS service.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as iot_actions_alpha from '@aws-cdk/aws-iot-actions-alpha';\nimport { aws_iam as iam } from 'aws-cdk-lib';\n\ndeclare const role: iam.Role;\nconst commonActionProps: iot_actions_alpha.CommonActionProps = {\n  role: role,\n};",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-iot-actions-alpha.CommonActionProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/common-action-props.ts",
        "line": 6
      },
      "name": "CommonActionProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "a new role will be created",
            "stability": "experimental",
            "summary": "The IAM role that allows access to AWS service."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/common-action-props.ts",
            "line": 12
          },
          "name": "role",
          "optional": true,
          "type": {
            "fqn": "aws-cdk-lib.aws_iam.IRole"
          }
        }
      ],
      "symbolId": "lib/common-action-props:CommonActionProps"
    },
    "@aws-cdk/aws-iot-actions-alpha.DynamoDBv2PutItemAction": {
      "assembly": "@aws-cdk/aws-iot-actions-alpha",
      "docs": {
        "stability": "experimental",
        "summary": "The action to put the record from an MQTT message to the DynamoDB table.",
        "example": "import * as dynamodb from 'aws-cdk-lib/aws-dynamodb';\n\ndeclare const table: dynamodb.Table;\n\nconst topicRule = new iot.TopicRule(this, 'TopicRule', {\n  sql: iot.IotSql.fromStringAsVer20160323(\n    \"SELECT * FROM 'device/+/data'\",\n  ),\n  actions: [\n    new actions.DynamoDBv2PutItemAction(table)\n  ],\n});",
        "custom": {
          "exampleMetadata": "infused"
        }
      },
      "fqn": "@aws-cdk/aws-iot-actions-alpha.DynamoDBv2PutItemAction",
      "initializer": {
        "docs": {
          "stability": "experimental"
        },
        "locationInModule": {
          "filename": "lib/dynamodbv2-put-item-action.ts",
          "line": 23
        },
        "parameters": [
          {
            "docs": {
              "summary": "the DynamoDB table in which to put the items."
            },
            "name": "table",
            "type": {
              "fqn": "aws-cdk-lib.aws_dynamodb.ITable"
            }
          },
          {
            "docs": {
              "summary": "Optional properties to not use default."
            },
            "name": "props",
            "optional": true,
            "type": {
              "fqn": "@aws-cdk/aws-iot-actions-alpha.DynamoDBv2PutItemActionProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/aws-iot-alpha.IAction"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/dynamodbv2-put-item-action.ts",
        "line": 16
      },
      "name": "DynamoDBv2PutItemAction",
      "symbolId": "lib/dynamodbv2-put-item-action:DynamoDBv2PutItemAction"
    },
    "@aws-cdk/aws-iot-actions-alpha.DynamoDBv2PutItemActionProps": {
      "assembly": "@aws-cdk/aws-iot-actions-alpha",
      "datatype": true,
      "docs": {
        "stability": "experimental",
        "summary": "Configuration properties of an action for the dynamodb table.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as iot_actions_alpha from '@aws-cdk/aws-iot-actions-alpha';\nimport { aws_iam as iam } from 'aws-cdk-lib';\n\ndeclare const role: iam.Role;\nconst dynamoDBv2PutItemActionProps: iot_actions_alpha.DynamoDBv2PutItemActionProps = {\n  role: role,\n};",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-iot-actions-alpha.DynamoDBv2PutItemActionProps",
      "interfaces": [
        "@aws-cdk/aws-iot-actions-alpha.CommonActionProps"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/dynamodbv2-put-item-action.ts",
        "line": 10
      },
      "name": "DynamoDBv2PutItemActionProps",
      "symbolId": "lib/dynamodbv2-put-item-action:DynamoDBv2PutItemActionProps"
    },
    "@aws-cdk/aws-iot-actions-alpha.FirehosePutRecordAction": {
      "assembly": "@aws-cdk/aws-iot-actions-alpha",
      "docs": {
        "stability": "experimental",
        "summary": "The action to put the record from an MQTT message to the Kinesis Data Firehose stream.",
        "example": "import * as firehose from '@aws-cdk/aws-kinesisfirehose-alpha';\nimport * as destinations from '@aws-cdk/aws-kinesisfirehose-destinations-alpha';\n\nconst bucket = new s3.Bucket(this, 'MyBucket');\nconst stream = new firehose.DeliveryStream(this, 'MyStream', {\n  destinations: [new destinations.S3Bucket(bucket)],\n});\n\nconst topicRule = new iot.TopicRule(this, 'TopicRule', {\n  sql: iot.IotSql.fromStringAsVer20160323(\"SELECT * FROM 'device/+/data'\"),\n  actions: [\n    new actions.FirehosePutRecordAction(stream, {\n      batchMode: true,\n      recordSeparator: actions.FirehoseRecordSeparator.NEWLINE,\n    }),\n  ],\n});",
        "custom": {
          "exampleMetadata": "infused"
        }
      },
      "fqn": "@aws-cdk/aws-iot-actions-alpha.FirehosePutRecordAction",
      "initializer": {
        "docs": {
          "stability": "experimental"
        },
        "locationInModule": {
          "filename": "lib/firehose-put-record-action.ts",
          "line": 66
        },
        "parameters": [
          {
            "docs": {
              "summary": "The Kinesis Data Firehose stream to which to put records."
            },
            "name": "stream",
            "type": {
              "fqn": "@aws-cdk/aws-kinesisfirehose-alpha.IDeliveryStream"
            }
          },
          {
            "docs": {
              "summary": "Optional properties to not use default."
            },
            "name": "props",
            "optional": true,
            "type": {
              "fqn": "@aws-cdk/aws-iot-actions-alpha.FirehosePutRecordActionProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/aws-iot-alpha.IAction"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/firehose-put-record-action.ts",
        "line": 57
      },
      "name": "FirehosePutRecordAction",
      "symbolId": "lib/firehose-put-record-action:FirehosePutRecordAction"
    },
    "@aws-cdk/aws-iot-actions-alpha.FirehosePutRecordActionProps": {
      "assembly": "@aws-cdk/aws-iot-actions-alpha",
      "datatype": true,
      "docs": {
        "stability": "experimental",
        "summary": "Configuration properties of an action for the Kinesis Data Firehose stream.",
        "example": "import * as firehose from '@aws-cdk/aws-kinesisfirehose-alpha';\nimport * as destinations from '@aws-cdk/aws-kinesisfirehose-destinations-alpha';\n\nconst bucket = new s3.Bucket(this, 'MyBucket');\nconst stream = new firehose.DeliveryStream(this, 'MyStream', {\n  destinations: [new destinations.S3Bucket(bucket)],\n});\n\nconst topicRule = new iot.TopicRule(this, 'TopicRule', {\n  sql: iot.IotSql.fromStringAsVer20160323(\"SELECT * FROM 'device/+/data'\"),\n  actions: [\n    new actions.FirehosePutRecordAction(stream, {\n      batchMode: true,\n      recordSeparator: actions.FirehoseRecordSeparator.NEWLINE,\n    }),\n  ],\n});",
        "custom": {
          "exampleMetadata": "infused"
        }
      },
      "fqn": "@aws-cdk/aws-iot-actions-alpha.FirehosePutRecordActionProps",
      "interfaces": [
        "@aws-cdk/aws-iot-actions-alpha.CommonActionProps"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/firehose-put-record-action.ts",
        "line": 35
      },
      "name": "FirehosePutRecordActionProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "remarks": "When batchMode is true and the rule's SQL statement evaluates to an Array, each Array\nelement forms one record in the PutRecordBatch request. The resulting array can't have\nmore than 500 records.",
            "stability": "experimental",
            "summary": "Whether to deliver the Kinesis Data Firehose stream as a batch by using `PutRecordBatch`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/firehose-put-record-action.ts",
            "line": 44
          },
          "name": "batchMode",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- none -- the stream does not use a separator",
            "stability": "experimental",
            "summary": "A character separator that will be used to separate records written to the Kinesis Data Firehose stream."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/firehose-put-record-action.ts",
            "line": 51
          },
          "name": "recordSeparator",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-iot-actions-alpha.FirehoseRecordSeparator"
          }
        }
      ],
      "symbolId": "lib/firehose-put-record-action:FirehosePutRecordActionProps"
    },
    "@aws-cdk/aws-iot-actions-alpha.FirehoseRecordSeparator": {
      "assembly": "@aws-cdk/aws-iot-actions-alpha",
      "docs": {
        "stability": "experimental",
        "summary": "Record Separator to be used to separate records.",
        "example": "import * as firehose from '@aws-cdk/aws-kinesisfirehose-alpha';\nimport * as destinations from '@aws-cdk/aws-kinesisfirehose-destinations-alpha';\n\nconst bucket = new s3.Bucket(this, 'MyBucket');\nconst stream = new firehose.DeliveryStream(this, 'MyStream', {\n  destinations: [new destinations.S3Bucket(bucket)],\n});\n\nconst topicRule = new iot.TopicRule(this, 'TopicRule', {\n  sql: iot.IotSql.fromStringAsVer20160323(\"SELECT * FROM 'device/+/data'\"),\n  actions: [\n    new actions.FirehosePutRecordAction(stream, {\n      batchMode: true,\n      recordSeparator: actions.FirehoseRecordSeparator.NEWLINE,\n    }),\n  ],\n});",
        "custom": {
          "exampleMetadata": "infused"
        }
      },
      "fqn": "@aws-cdk/aws-iot-actions-alpha.FirehoseRecordSeparator",
      "kind": "enum",
      "locationInModule": {
        "filename": "lib/firehose-put-record-action.ts",
        "line": 10
      },
      "members": [
        {
          "docs": {
            "stability": "experimental",
            "summary": "Separate by a new line."
          },
          "name": "NEWLINE"
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Separate by a tab."
          },
          "name": "TAB"
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Separate by a windows new line."
          },
          "name": "WINDOWS_NEWLINE"
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Separate by a commma."
          },
          "name": "COMMA"
        }
      ],
      "name": "FirehoseRecordSeparator",
      "symbolId": "lib/firehose-put-record-action:FirehoseRecordSeparator"
    },
    "@aws-cdk/aws-iot-actions-alpha.HttpActionHeader": {
      "assembly": "@aws-cdk/aws-iot-actions-alpha",
      "datatype": true,
      "docs": {
        "stability": "experimental",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as iot_actions_alpha from '@aws-cdk/aws-iot-actions-alpha';\nconst httpActionHeader: iot_actions_alpha.HttpActionHeader = {\n  key: 'key',\n  value: 'value',\n};",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-iot-actions-alpha.HttpActionHeader",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/https-action.ts",
        "line": 17
      },
      "name": "HttpActionHeader",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "The HTTP header key."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/https-action.ts",
            "line": 21
          },
          "name": "key",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Substitution templates are supported.",
            "stability": "experimental",
            "summary": "The HTTP header value."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/https-action.ts",
            "line": 25
          },
          "name": "value",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/https-action:HttpActionHeader"
    },
    "@aws-cdk/aws-iot-actions-alpha.HttpActionSigV4Auth": {
      "assembly": "@aws-cdk/aws-iot-actions-alpha",
      "datatype": true,
      "docs": {
        "stability": "experimental",
        "example": "const topicRule = new iot.TopicRule(this, 'TopicRule', {\n  sql: iot.IotSql.fromStringAsVer20160323(\n    \"SELECT topic(2) as device_id, year, month, day FROM 'device/+/data'\",\n  ),\n});\n\ntopicRule.addAction(\n  new actions.HttpsAction('https://example.com/endpoint', {\n    confirmationUrl: 'https://example.com',\n    headers: [\n      { key: 'key0', value: 'value0' },\n      { key: 'key1', value: 'value1' },\n    ],\n    auth: { serviceName: 'serviceName', signingRegion: 'us-east-1' },\n  }),\n);",
        "custom": {
          "exampleMetadata": "infused"
        }
      },
      "fqn": "@aws-cdk/aws-iot-actions-alpha.HttpActionSigV4Auth",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/https-action.ts",
        "line": 6
      },
      "name": "HttpActionSigV4Auth",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "The service name."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/https-action.ts",
            "line": 10
          },
          "name": "serviceName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "The signing region."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/https-action.ts",
            "line": 14
          },
          "name": "signingRegion",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/https-action:HttpActionSigV4Auth"
    },
    "@aws-cdk/aws-iot-actions-alpha.HttpsAction": {
      "assembly": "@aws-cdk/aws-iot-actions-alpha",
      "docs": {
        "stability": "experimental",
        "summary": "The action to send data from an MQTT message to a web application or service.",
        "example": "const topicRule = new iot.TopicRule(this, 'TopicRule', {\n  sql: iot.IotSql.fromStringAsVer20160323(\n    \"SELECT topic(2) as device_id, year, month, day FROM 'device/+/data'\",\n  ),\n});\n\ntopicRule.addAction(\n  new actions.HttpsAction('https://example.com/endpoint', {\n    confirmationUrl: 'https://example.com',\n    headers: [\n      { key: 'key0', value: 'value0' },\n      { key: 'key1', value: 'value1' },\n    ],\n    auth: { serviceName: 'serviceName', signingRegion: 'us-east-1' },\n  }),\n);",
        "custom": {
          "exampleMetadata": "infused"
        }
      },
      "fqn": "@aws-cdk/aws-iot-actions-alpha.HttpsAction",
      "initializer": {
        "docs": {
          "stability": "experimental"
        },
        "locationInModule": {
          "filename": "lib/https-action.ts",
          "line": 64
        },
        "parameters": [
          {
            "docs": {
              "summary": "The url to which to send post request."
            },
            "name": "url",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "Optional properties to not use default."
            },
            "name": "props",
            "optional": true,
            "type": {
              "fqn": "@aws-cdk/aws-iot-actions-alpha.HttpsActionProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/aws-iot-alpha.IAction"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/https-action.ts",
        "line": 53
      },
      "name": "HttpsAction",
      "symbolId": "lib/https-action:HttpsAction"
    },
    "@aws-cdk/aws-iot-actions-alpha.HttpsActionProps": {
      "assembly": "@aws-cdk/aws-iot-actions-alpha",
      "datatype": true,
      "docs": {
        "see": "https://docs.aws.amazon.com/iot/latest/developerguide/https-rule-action.html",
        "stability": "experimental",
        "summary": "Configuration properties of an HTTPS action.",
        "example": "const topicRule = new iot.TopicRule(this, 'TopicRule', {\n  sql: iot.IotSql.fromStringAsVer20160323(\n    \"SELECT topic(2) as device_id, year, month, day FROM 'device/+/data'\",\n  ),\n});\n\ntopicRule.addAction(\n  new actions.HttpsAction('https://example.com/endpoint', {\n    confirmationUrl: 'https://example.com',\n    headers: [\n      { key: 'key0', value: 'value0' },\n      { key: 'key1', value: 'value1' },\n    ],\n    auth: { serviceName: 'serviceName', signingRegion: 'us-east-1' },\n  }),\n);",
        "custom": {
          "exampleMetadata": "infused"
        }
      },
      "fqn": "@aws-cdk/aws-iot-actions-alpha.HttpsActionProps",
      "interfaces": [
        "@aws-cdk/aws-iot-actions-alpha.CommonActionProps"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/https-action.ts",
        "line": 33
      },
      "name": "HttpsActionProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "Use Sigv4 authorization."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/https-action.ts",
            "line": 47
          },
          "name": "auth",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-iot-actions-alpha.HttpActionSigV4Auth"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "If specified, AWS IoT uses the confirmation URL to create a matching topic rule destination."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/https-action.ts",
            "line": 37
          },
          "name": "confirmationUrl",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "The headers to include in the HTTPS request to the endpoint."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/https-action.ts",
            "line": 42
          },
          "name": "headers",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-iot-actions-alpha.HttpActionHeader"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "lib/https-action:HttpsActionProps"
    },
    "@aws-cdk/aws-iot-actions-alpha.IotEventsPutMessageAction": {
      "assembly": "@aws-cdk/aws-iot-actions-alpha",
      "docs": {
        "stability": "experimental",
        "summary": "The action to put the message from an MQTT message to the IoT Events input.",
        "example": "import * as iotevents from '@aws-cdk/aws-iotevents-alpha';\nimport * as iam from 'aws-cdk-lib/aws-iam';\n\ndeclare const role: iam.IRole;\n\nconst input = new iotevents.Input(this, 'MyInput', {\n  attributeJsonPaths: ['payload.temperature', 'payload.transactionId'],\n});\nconst topicRule = new iot.TopicRule(this, 'TopicRule', {\n  sql: iot.IotSql.fromStringAsVer20160323(\n    \"SELECT * FROM 'device/+/data'\",\n  ),\n  actions: [\n    new actions.IotEventsPutMessageAction(input, {\n      batchMode: true, // optional property, default is 'false'\n      messageId: '${payload.transactionId}', // optional property, default is a new UUID\n      role: role, // optional property, default is a new UUID\n    }),\n  ],\n});",
        "custom": {
          "exampleMetadata": "infused"
        }
      },
      "fqn": "@aws-cdk/aws-iot-actions-alpha.IotEventsPutMessageAction",
      "initializer": {
        "docs": {
          "stability": "experimental"
        },
        "locationInModule": {
          "filename": "lib/iotevents-put-message-action.ts",
          "line": 47
        },
        "parameters": [
          {
            "docs": {
              "summary": "The IoT Events input to put messages."
            },
            "name": "input",
            "type": {
              "fqn": "@aws-cdk/aws-iotevents-alpha.IInput"
            }
          },
          {
            "docs": {
              "summary": "Optional properties to not use default."
            },
            "name": "props",
            "optional": true,
            "type": {
              "fqn": "@aws-cdk/aws-iot-actions-alpha.IotEventsPutMessageActionProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/aws-iot-alpha.IAction"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/iotevents-put-message-action.ts",
        "line": 38
      },
      "name": "IotEventsPutMessageAction",
      "symbolId": "lib/iotevents-put-message-action:IotEventsPutMessageAction"
    },
    "@aws-cdk/aws-iot-actions-alpha.IotEventsPutMessageActionProps": {
      "assembly": "@aws-cdk/aws-iot-actions-alpha",
      "datatype": true,
      "docs": {
        "stability": "experimental",
        "summary": "Configuration properties of an action for the IoT Events.",
        "example": "import * as iotevents from '@aws-cdk/aws-iotevents-alpha';\nimport * as iam from 'aws-cdk-lib/aws-iam';\n\ndeclare const role: iam.IRole;\n\nconst input = new iotevents.Input(this, 'MyInput', {\n  attributeJsonPaths: ['payload.temperature', 'payload.transactionId'],\n});\nconst topicRule = new iot.TopicRule(this, 'TopicRule', {\n  sql: iot.IotSql.fromStringAsVer20160323(\n    \"SELECT * FROM 'device/+/data'\",\n  ),\n  actions: [\n    new actions.IotEventsPutMessageAction(input, {\n      batchMode: true, // optional property, default is 'false'\n      messageId: '${payload.transactionId}', // optional property, default is a new UUID\n      role: role, // optional property, default is a new UUID\n    }),\n  ],\n});",
        "custom": {
          "exampleMetadata": "infused"
        }
      },
      "fqn": "@aws-cdk/aws-iot-actions-alpha.IotEventsPutMessageActionProps",
      "interfaces": [
        "@aws-cdk/aws-iot-actions-alpha.CommonActionProps"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/iotevents-put-message-action.ts",
        "line": 10
      },
      "name": "IotEventsPutMessageActionProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "remarks": "When batchMode is true, you can't specify a messageId.\n\nWhen batchMode is true and the rule SQL statement evaluates to an Array,\neach Array element is treated as a separate message when Events by calling BatchPutMessage.\nThe resulting array can't have more than 10 messages.",
            "stability": "experimental",
            "summary": "Whether to process the event actions as a batch."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/iotevents-put-message-action.ts",
            "line": 22
          },
          "name": "batchMode",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- none -- a new UUID value will be assigned",
            "remarks": "When batchMode is true, you can't specify a messageId--a new UUID value will be assigned.\nAssign a value to this property to ensure that only one input (message) with a given messageId will be processed by an AWS IoT Events detector.",
            "stability": "experimental",
            "summary": "The ID of the message."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/iotevents-put-message-action.ts",
            "line": 32
          },
          "name": "messageId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/iotevents-put-message-action:IotEventsPutMessageActionProps"
    },
    "@aws-cdk/aws-iot-actions-alpha.IotRepublishMqttAction": {
      "assembly": "@aws-cdk/aws-iot-actions-alpha",
      "docs": {
        "stability": "experimental",
        "summary": "The action to put the record from an MQTT message to republish another MQTT topic.",
        "example": "new iot.TopicRule(this, 'TopicRule', {\n  sql: iot.IotSql.fromStringAsVer20160323(\"SELECT topic(2) as device_id, timestamp() as timestamp, temperature FROM 'device/+/data'\"),\n  actions: [\n    new actions.IotRepublishMqttAction('${topic()}/republish', {\n      qualityOfService: actions.MqttQualityOfService.AT_LEAST_ONCE, // optional property, default is MqttQualityOfService.ZERO_OR_MORE_TIMES\n    }),\n  ],\n});",
        "custom": {
          "exampleMetadata": "infused"
        }
      },
      "fqn": "@aws-cdk/aws-iot-actions-alpha.IotRepublishMqttAction",
      "initializer": {
        "docs": {
          "stability": "experimental"
        },
        "locationInModule": {
          "filename": "lib/iot-republish-action.ts",
          "line": 50
        },
        "parameters": [
          {
            "docs": {
              "summary": "The MQTT topic to which to republish the message."
            },
            "name": "topic",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "Optional properties to not use default."
            },
            "name": "props",
            "optional": true,
            "type": {
              "fqn": "@aws-cdk/aws-iot-actions-alpha.IotRepublishMqttActionProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/aws-iot-alpha.IAction"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/iot-republish-action.ts",
        "line": 42
      },
      "name": "IotRepublishMqttAction",
      "symbolId": "lib/iot-republish-action:IotRepublishMqttAction"
    },
    "@aws-cdk/aws-iot-actions-alpha.IotRepublishMqttActionProps": {
      "assembly": "@aws-cdk/aws-iot-actions-alpha",
      "datatype": true,
      "docs": {
        "stability": "experimental",
        "summary": "Configuration properties of an action to republish MQTT messages.",
        "example": "new iot.TopicRule(this, 'TopicRule', {\n  sql: iot.IotSql.fromStringAsVer20160323(\"SELECT topic(2) as device_id, timestamp() as timestamp, temperature FROM 'device/+/data'\"),\n  actions: [\n    new actions.IotRepublishMqttAction('${topic()}/republish', {\n      qualityOfService: actions.MqttQualityOfService.AT_LEAST_ONCE, // optional property, default is MqttQualityOfService.ZERO_OR_MORE_TIMES\n    }),\n  ],\n});",
        "custom": {
          "exampleMetadata": "infused"
        }
      },
      "fqn": "@aws-cdk/aws-iot-actions-alpha.IotRepublishMqttActionProps",
      "interfaces": [
        "@aws-cdk/aws-iot-actions-alpha.CommonActionProps"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/iot-republish-action.ts",
        "line": 28
      },
      "name": "IotRepublishMqttActionProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "MqttQualityOfService.ZERO_OR_MORE_TIMES",
            "see": "https://docs.aws.amazon.com/iot/latest/developerguide/mqtt.html#mqtt-qos",
            "stability": "experimental",
            "summary": "The Quality of Service (QoS) level to use when republishing messages."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/iot-republish-action.ts",
            "line": 36
          },
          "name": "qualityOfService",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-iot-actions-alpha.MqttQualityOfService"
          }
        }
      ],
      "symbolId": "lib/iot-republish-action:IotRepublishMqttActionProps"
    },
    "@aws-cdk/aws-iot-actions-alpha.KinesisPutRecordAction": {
      "assembly": "@aws-cdk/aws-iot-actions-alpha",
      "docs": {
        "stability": "experimental",
        "summary": "The action to put the record from an MQTT message to the Kinesis Data stream.",
        "example": "import * as kinesis from 'aws-cdk-lib/aws-kinesis';\n\nconst stream = new kinesis.Stream(this, 'MyStream');\n\nconst topicRule = new iot.TopicRule(this, 'TopicRule', {\n  sql: iot.IotSql.fromStringAsVer20160323(\"SELECT * FROM 'device/+/data'\"),\n  actions: [\n    new actions.KinesisPutRecordAction(stream, {\n      partitionKey: '${newuuid()}',\n    }),\n  ],\n});",
        "custom": {
          "exampleMetadata": "infused"
        }
      },
      "fqn": "@aws-cdk/aws-iot-actions-alpha.KinesisPutRecordAction",
      "initializer": {
        "docs": {
          "stability": "experimental"
        },
        "locationInModule": {
          "filename": "lib/kinesis-put-record-action.ts",
          "line": 36
        },
        "parameters": [
          {
            "docs": {
              "summary": "The Kinesis Data stream to which to put records."
            },
            "name": "stream",
            "type": {
              "fqn": "aws-cdk-lib.aws_kinesis.IStream"
            }
          },
          {
            "docs": {
              "summary": "Optional properties to not use default."
            },
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-iot-actions-alpha.KinesisPutRecordActionProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/aws-iot-alpha.IAction"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/kinesis-put-record-action.ts",
        "line": 28
      },
      "name": "KinesisPutRecordAction",
      "symbolId": "lib/kinesis-put-record-action:KinesisPutRecordAction"
    },
    "@aws-cdk/aws-iot-actions-alpha.KinesisPutRecordActionProps": {
      "assembly": "@aws-cdk/aws-iot-actions-alpha",
      "datatype": true,
      "docs": {
        "stability": "experimental",
        "summary": "Configuration properties of an action for the Kinesis Data stream.",
        "example": "import * as kinesis from 'aws-cdk-lib/aws-kinesis';\n\nconst stream = new kinesis.Stream(this, 'MyStream');\n\nconst topicRule = new iot.TopicRule(this, 'TopicRule', {\n  sql: iot.IotSql.fromStringAsVer20160323(\"SELECT * FROM 'device/+/data'\"),\n  actions: [\n    new actions.KinesisPutRecordAction(stream, {\n      partitionKey: '${newuuid()}',\n    }),\n  ],\n});",
        "custom": {
          "exampleMetadata": "infused"
        }
      },
      "fqn": "@aws-cdk/aws-iot-actions-alpha.KinesisPutRecordActionProps",
      "interfaces": [
        "@aws-cdk/aws-iot-actions-alpha.CommonActionProps"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/kinesis-put-record-action.ts",
        "line": 10
      },
      "name": "KinesisPutRecordActionProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "The partition key is usually composed of an expression (for example, ${topic()} or ${timestamp()}).",
            "see": "https://docs.aws.amazon.com/kinesis/latest/APIReference/API_PutRecord.html#API_PutRecord_RequestParameters",
            "stability": "experimental",
            "summary": "The partition key used to determine to which shard the data is written."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/kinesis-put-record-action.ts",
            "line": 22
          },
          "name": "partitionKey",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/kinesis-put-record-action:KinesisPutRecordActionProps"
    },
    "@aws-cdk/aws-iot-actions-alpha.LambdaFunctionAction": {
      "assembly": "@aws-cdk/aws-iot-actions-alpha",
      "docs": {
        "stability": "experimental",
        "summary": "The action to invoke an AWS Lambda function, passing in an MQTT message.",
        "example": "const func = new lambda.Function(this, 'MyFunction', {\n  runtime: lambda.Runtime.NODEJS_LATEST,\n  handler: 'index.handler',\n  code: lambda.Code.fromInline(`\n    exports.handler = (event) => {\n      console.log(\"It is test for lambda action of AWS IoT Rule.\", event);\n    };`\n  ),\n});\n\nnew iot.TopicRule(this, 'TopicRule', {\n  sql: iot.IotSql.fromStringAsVer20160323(\"SELECT topic(2) as device_id, timestamp() as timestamp, temperature FROM 'device/+/data'\"),\n  actions: [new actions.LambdaFunctionAction(func)],\n});",
        "custom": {
          "exampleMetadata": "infused"
        }
      },
      "fqn": "@aws-cdk/aws-iot-actions-alpha.LambdaFunctionAction",
      "initializer": {
        "docs": {
          "stability": "experimental"
        },
        "locationInModule": {
          "filename": "lib/lambda-function-action.ts",
          "line": 13
        },
        "parameters": [
          {
            "docs": {
              "summary": "The lambda function to be invoked by this action."
            },
            "name": "func",
            "type": {
              "fqn": "aws-cdk-lib.aws_lambda.IFunction"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/aws-iot-alpha.IAction"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/lambda-function-action.ts",
        "line": 9
      },
      "name": "LambdaFunctionAction",
      "symbolId": "lib/lambda-function-action:LambdaFunctionAction"
    },
    "@aws-cdk/aws-iot-actions-alpha.MqttQualityOfService": {
      "assembly": "@aws-cdk/aws-iot-actions-alpha",
      "docs": {
        "see": "https://docs.aws.amazon.com/iot/latest/developerguide/mqtt.html#mqtt-qos",
        "stability": "experimental",
        "summary": "MQTT Quality of Service (QoS) indicates the level of assurance for delivery of an MQTT Message.",
        "example": "new iot.TopicRule(this, 'TopicRule', {\n  sql: iot.IotSql.fromStringAsVer20160323(\"SELECT topic(2) as device_id, timestamp() as timestamp, temperature FROM 'device/+/data'\"),\n  actions: [\n    new actions.IotRepublishMqttAction('${topic()}/republish', {\n      qualityOfService: actions.MqttQualityOfService.AT_LEAST_ONCE, // optional property, default is MqttQualityOfService.ZERO_OR_MORE_TIMES\n    }),\n  ],\n});",
        "custom": {
          "exampleMetadata": "infused"
        }
      },
      "fqn": "@aws-cdk/aws-iot-actions-alpha.MqttQualityOfService",
      "kind": "enum",
      "locationInModule": {
        "filename": "lib/iot-republish-action.ts",
        "line": 11
      },
      "members": [
        {
          "docs": {
            "remarks": "Sent zero or more times.\nThis level should be used for messages that are sent over reliable communication links or that can be missed without a problem.",
            "stability": "experimental",
            "summary": "QoS level 0."
          },
          "name": "ZERO_OR_MORE_TIMES"
        },
        {
          "docs": {
            "remarks": "Sent at least one time, and then repeatedly until a PUBACK response is received.\nThe message is not considered complete until the sender receives a PUBACK response to indicate successful delivery.",
            "stability": "experimental",
            "summary": "QoS level 1."
          },
          "name": "AT_LEAST_ONCE"
        }
      ],
      "name": "MqttQualityOfService",
      "symbolId": "lib/iot-republish-action:MqttQualityOfService"
    },
    "@aws-cdk/aws-iot-actions-alpha.OpenSearchAction": {
      "assembly": "@aws-cdk/aws-iot-actions-alpha",
      "docs": {
        "stability": "experimental",
        "summary": "The action to write data to an Amazon OpenSearch Service domain.",
        "example": "import * as opensearch from 'aws-cdk-lib/aws-opensearchservice';\ndeclare const domain: opensearch.Domain;\n\nconst topicRule = new iot.TopicRule(this, 'TopicRule', {\n  sql: iot.IotSql.fromStringAsVer20160323(\n    \"SELECT topic(2) as device_id, year, month, day FROM 'device/+/data'\",\n  ),\n});\n\ntopicRule.addAction(new actions.OpenSearchAction(domain, {\n  id: 'my-id',\n  index: 'my-index',\n  type: 'my-type',\n}));",
        "custom": {
          "exampleMetadata": "infused"
        }
      },
      "fqn": "@aws-cdk/aws-iot-actions-alpha.OpenSearchAction",
      "initializer": {
        "docs": {
          "stability": "experimental"
        },
        "locationInModule": {
          "filename": "lib/open-search-action.ts",
          "line": 31
        },
        "parameters": [
          {
            "name": "domain",
            "type": {
              "fqn": "aws-cdk-lib.aws_opensearchservice.Domain"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-iot-actions-alpha.OpenSearchActionProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/aws-iot-alpha.IAction"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/open-search-action.ts",
        "line": 30
      },
      "name": "OpenSearchAction",
      "symbolId": "lib/open-search-action:OpenSearchAction"
    },
    "@aws-cdk/aws-iot-actions-alpha.OpenSearchActionProps": {
      "assembly": "@aws-cdk/aws-iot-actions-alpha",
      "datatype": true,
      "docs": {
        "stability": "experimental",
        "summary": "Configuration properties of an action for Open Search.",
        "example": "import * as opensearch from 'aws-cdk-lib/aws-opensearchservice';\ndeclare const domain: opensearch.Domain;\n\nconst topicRule = new iot.TopicRule(this, 'TopicRule', {\n  sql: iot.IotSql.fromStringAsVer20160323(\n    \"SELECT topic(2) as device_id, year, month, day FROM 'device/+/data'\",\n  ),\n});\n\ntopicRule.addAction(new actions.OpenSearchAction(domain, {\n  id: 'my-id',\n  index: 'my-index',\n  type: 'my-type',\n}));",
        "custom": {
          "exampleMetadata": "infused"
        }
      },
      "fqn": "@aws-cdk/aws-iot-actions-alpha.OpenSearchActionProps",
      "interfaces": [
        "@aws-cdk/aws-iot-actions-alpha.CommonActionProps"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/open-search-action.ts",
        "line": 10
      },
      "name": "OpenSearchActionProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "The unique identifier for the document you are storing."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/open-search-action.ts",
            "line": 14
          },
          "name": "id",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "The OpenSearch index where you want to store your data."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/open-search-action.ts",
            "line": 19
          },
          "name": "index",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "The type of document you are storing."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/open-search-action.ts",
            "line": 24
          },
          "name": "type",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/open-search-action:OpenSearchActionProps"
    },
    "@aws-cdk/aws-iot-actions-alpha.S3PutObjectAction": {
      "assembly": "@aws-cdk/aws-iot-actions-alpha",
      "docs": {
        "stability": "experimental",
        "summary": "The action to write the data from an MQTT message to an Amazon S3 bucket.",
        "example": "const bucket = new s3.Bucket(this, 'MyBucket');\n\nnew iot.TopicRule(this, 'TopicRule', {\n  sql: iot.IotSql.fromStringAsVer20160323(\n    \"SELECT topic(2) as device_id, year, month, day FROM 'device/+/data'\",\n  ),\n  actions: [\n    new actions.S3PutObjectAction(bucket, {\n      key: '${year}/${month}/${day}/${topic(2)}',\n    }),\n  ],\n});",
        "custom": {
          "exampleMetadata": "infused"
        }
      },
      "fqn": "@aws-cdk/aws-iot-actions-alpha.S3PutObjectAction",
      "initializer": {
        "docs": {
          "stability": "experimental"
        },
        "locationInModule": {
          "filename": "lib/s3-put-object-action.ts",
          "line": 43
        },
        "parameters": [
          {
            "docs": {
              "summary": "The Amazon S3 bucket to which to write data."
            },
            "name": "bucket",
            "type": {
              "fqn": "aws-cdk-lib.aws_s3.IBucket"
            }
          },
          {
            "docs": {
              "summary": "Optional properties to not use default."
            },
            "name": "props",
            "optional": true,
            "type": {
              "fqn": "@aws-cdk/aws-iot-actions-alpha.S3PutObjectActionProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/aws-iot-alpha.IAction"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/s3-put-object-action.ts",
        "line": 34
      },
      "name": "S3PutObjectAction",
      "symbolId": "lib/s3-put-object-action:S3PutObjectAction"
    },
    "@aws-cdk/aws-iot-actions-alpha.S3PutObjectActionProps": {
      "assembly": "@aws-cdk/aws-iot-actions-alpha",
      "datatype": true,
      "docs": {
        "stability": "experimental",
        "summary": "Configuration properties of an action for s3.",
        "example": "const bucket = new s3.Bucket(this, 'MyBucket');\n\nnew iot.TopicRule(this, 'TopicRule', {\n  sql: iot.IotSql.fromStringAsVer20160323(\n    \"SELECT topic(2) as device_id, year, month, day FROM 'device/+/data'\",\n  ),\n  actions: [\n    new actions.S3PutObjectAction(bucket, {\n      key: '${year}/${month}/${day}/${topic(2)}',\n    }),\n  ],\n});",
        "custom": {
          "exampleMetadata": "infused"
        }
      },
      "fqn": "@aws-cdk/aws-iot-actions-alpha.S3PutObjectActionProps",
      "interfaces": [
        "@aws-cdk/aws-iot-actions-alpha.CommonActionProps"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/s3-put-object-action.ts",
        "line": 11
      },
      "name": "S3PutObjectActionProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "None",
            "see": "https://docs.aws.amazon.com/AmazonS3/latest/userguide/acl-overview.html#canned-acl",
            "stability": "experimental",
            "summary": "The Amazon S3 canned ACL that controls access to the object identified by the object key."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/s3-put-object-action.ts",
            "line": 18
          },
          "name": "accessControl",
          "optional": true,
          "type": {
            "fqn": "aws-cdk-lib.aws_s3.BucketAccessControl"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "'${topic()}/${timestamp()}'",
            "remarks": "Supports substitution templates.",
            "see": "https://docs.aws.amazon.com/iot/latest/developerguide/iot-substitution-templates.html",
            "stability": "experimental",
            "summary": "The path to the file where the data is written."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/s3-put-object-action.ts",
            "line": 28
          },
          "name": "key",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/s3-put-object-action:S3PutObjectActionProps"
    },
    "@aws-cdk/aws-iot-actions-alpha.SnsActionMessageFormat": {
      "assembly": "@aws-cdk/aws-iot-actions-alpha",
      "docs": {
        "stability": "experimental",
        "summary": "SNS topic action message format options.",
        "example": "import * as sns from 'aws-cdk-lib/aws-sns';\n\nconst topic = new sns.Topic(this, 'MyTopic');\n\nconst topicRule = new iot.TopicRule(this, 'TopicRule', {\n  sql: iot.IotSql.fromStringAsVer20160323(\n    \"SELECT topic(2) as device_id, year, month, day FROM 'device/+/data'\",\n  ),\n  actions: [\n    new actions.SnsTopicAction(topic, {\n      messageFormat: actions.SnsActionMessageFormat.JSON, // optional property, default is SnsActionMessageFormat.RAW\n    }),\n  ],\n});",
        "custom": {
          "exampleMetadata": "infused"
        }
      },
      "fqn": "@aws-cdk/aws-iot-actions-alpha.SnsActionMessageFormat",
      "kind": "enum",
      "locationInModule": {
        "filename": "lib/sns-topic-action.ts",
        "line": 10
      },
      "members": [
        {
          "docs": {
            "stability": "experimental",
            "summary": "RAW message format."
          },
          "name": "RAW"
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "JSON message format."
          },
          "name": "JSON"
        }
      ],
      "name": "SnsActionMessageFormat",
      "symbolId": "lib/sns-topic-action:SnsActionMessageFormat"
    },
    "@aws-cdk/aws-iot-actions-alpha.SnsTopicAction": {
      "assembly": "@aws-cdk/aws-iot-actions-alpha",
      "docs": {
        "see": "https://docs.aws.amazon.com/iot/latest/developerguide/sns-rule-action.html",
        "stability": "experimental",
        "summary": "The action to write the data from an MQTT message to an Amazon SNS topic.",
        "example": "import * as sns from 'aws-cdk-lib/aws-sns';\n\nconst topic = new sns.Topic(this, 'MyTopic');\n\nconst topicRule = new iot.TopicRule(this, 'TopicRule', {\n  sql: iot.IotSql.fromStringAsVer20160323(\n    \"SELECT topic(2) as device_id, year, month, day FROM 'device/+/data'\",\n  ),\n  actions: [\n    new actions.SnsTopicAction(topic, {\n      messageFormat: actions.SnsActionMessageFormat.JSON, // optional property, default is SnsActionMessageFormat.RAW\n    }),\n  ],\n});",
        "custom": {
          "exampleMetadata": "infused"
        }
      },
      "fqn": "@aws-cdk/aws-iot-actions-alpha.SnsTopicAction",
      "initializer": {
        "docs": {
          "stability": "experimental"
        },
        "locationInModule": {
          "filename": "lib/sns-topic-action.ts",
          "line": 51
        },
        "parameters": [
          {
            "docs": {
              "remarks": "Must not be a FIFO topic.",
              "summary": "The Amazon SNS topic to publish data on."
            },
            "name": "topic",
            "type": {
              "fqn": "aws-cdk-lib.aws_sns.ITopic"
            }
          },
          {
            "docs": {
              "summary": "Properties to configure the action."
            },
            "name": "props",
            "optional": true,
            "type": {
              "fqn": "@aws-cdk/aws-iot-actions-alpha.SnsTopicActionProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/aws-iot-alpha.IAction"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/sns-topic-action.ts",
        "line": 42
      },
      "name": "SnsTopicAction",
      "symbolId": "lib/sns-topic-action:SnsTopicAction"
    },
    "@aws-cdk/aws-iot-actions-alpha.SnsTopicActionProps": {
      "assembly": "@aws-cdk/aws-iot-actions-alpha",
      "datatype": true,
      "docs": {
        "stability": "experimental",
        "summary": "Configuration options for the SNS topic action.",
        "example": "import * as sns from 'aws-cdk-lib/aws-sns';\n\nconst topic = new sns.Topic(this, 'MyTopic');\n\nconst topicRule = new iot.TopicRule(this, 'TopicRule', {\n  sql: iot.IotSql.fromStringAsVer20160323(\n    \"SELECT topic(2) as device_id, year, month, day FROM 'device/+/data'\",\n  ),\n  actions: [\n    new actions.SnsTopicAction(topic, {\n      messageFormat: actions.SnsActionMessageFormat.JSON, // optional property, default is SnsActionMessageFormat.RAW\n    }),\n  ],\n});",
        "custom": {
          "exampleMetadata": "infused"
        }
      },
      "fqn": "@aws-cdk/aws-iot-actions-alpha.SnsTopicActionProps",
      "interfaces": [
        "@aws-cdk/aws-iot-actions-alpha.CommonActionProps"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/sns-topic-action.ts",
        "line": 25
      },
      "name": "SnsTopicActionProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "SnsActionMessageFormat.RAW",
            "remarks": "SNS uses this setting to determine if the payload should be parsed and relevant platform-specific bits of the payload should be extracted.",
            "see": "https://docs.aws.amazon.com/sns/latest/dg/sns-message-and-json-formats.html",
            "stability": "experimental",
            "summary": "The message format of the message to publish."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/sns-topic-action.ts",
            "line": 34
          },
          "name": "messageFormat",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-iot-actions-alpha.SnsActionMessageFormat"
          }
        }
      ],
      "symbolId": "lib/sns-topic-action:SnsTopicActionProps"
    },
    "@aws-cdk/aws-iot-actions-alpha.SqsQueueAction": {
      "assembly": "@aws-cdk/aws-iot-actions-alpha",
      "docs": {
        "stability": "experimental",
        "summary": "The action to write the data from an MQTT message to an Amazon SQS queue.",
        "example": "import * as sqs from 'aws-cdk-lib/aws-sqs';\n\nconst queue = new sqs.Queue(this, 'MyQueue');\n\nconst topicRule = new iot.TopicRule(this, 'TopicRule', {\n  sql: iot.IotSql.fromStringAsVer20160323(\n    \"SELECT topic(2) as device_id, year, month, day FROM 'device/+/data'\",\n  ),\n  actions: [\n    new actions.SqsQueueAction(queue, {\n      useBase64: true, // optional property, default is 'false'\n    }),\n  ],\n});",
        "custom": {
          "exampleMetadata": "infused"
        }
      },
      "fqn": "@aws-cdk/aws-iot-actions-alpha.SqsQueueAction",
      "initializer": {
        "docs": {
          "stability": "experimental"
        },
        "locationInModule": {
          "filename": "lib/sqs-queue-action.ts",
          "line": 31
        },
        "parameters": [
          {
            "docs": {
              "summary": "The Amazon SQS queue to which to write data."
            },
            "name": "queue",
            "type": {
              "fqn": "aws-cdk-lib.aws_sqs.IQueue"
            }
          },
          {
            "docs": {
              "summary": "Optional properties to not use default."
            },
            "name": "props",
            "optional": true,
            "type": {
              "fqn": "@aws-cdk/aws-iot-actions-alpha.SqsQueueActionProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/aws-iot-alpha.IAction"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/sqs-queue-action.ts",
        "line": 22
      },
      "name": "SqsQueueAction",
      "symbolId": "lib/sqs-queue-action:SqsQueueAction"
    },
    "@aws-cdk/aws-iot-actions-alpha.SqsQueueActionProps": {
      "assembly": "@aws-cdk/aws-iot-actions-alpha",
      "datatype": true,
      "docs": {
        "stability": "experimental",
        "summary": "Configuration properties of an action for SQS.",
        "example": "import * as sqs from 'aws-cdk-lib/aws-sqs';\n\nconst queue = new sqs.Queue(this, 'MyQueue');\n\nconst topicRule = new iot.TopicRule(this, 'TopicRule', {\n  sql: iot.IotSql.fromStringAsVer20160323(\n    \"SELECT topic(2) as device_id, year, month, day FROM 'device/+/data'\",\n  ),\n  actions: [\n    new actions.SqsQueueAction(queue, {\n      useBase64: true, // optional property, default is 'false'\n    }),\n  ],\n});",
        "custom": {
          "exampleMetadata": "infused"
        }
      },
      "fqn": "@aws-cdk/aws-iot-actions-alpha.SqsQueueActionProps",
      "interfaces": [
        "@aws-cdk/aws-iot-actions-alpha.CommonActionProps"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/sqs-queue-action.ts",
        "line": 10
      },
      "name": "SqsQueueActionProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "stability": "experimental",
            "summary": "Specifies whether to use Base64 encoding."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/sqs-queue-action.ts",
            "line": 16
          },
          "name": "useBase64",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        }
      ],
      "symbolId": "lib/sqs-queue-action:SqsQueueActionProps"
    },
    "@aws-cdk/aws-iot-actions-alpha.StepFunctionsStateMachineAction": {
      "assembly": "@aws-cdk/aws-iot-actions-alpha",
      "docs": {
        "stability": "experimental",
        "summary": "The action to put the record from an MQTT message to the Step Functions State Machine.",
        "example": "const stateMachine = new stepfunctions.StateMachine(this, 'SM', {\n  definitionBody: stepfunctions.DefinitionBody.fromChainable(new stepfunctions.Wait(this, 'Hello', { time: stepfunctions.WaitTime.duration(Duration.seconds(10)) })),\n});\n\nnew iot.TopicRule(this, 'TopicRule', {\n  sql: iot.IotSql.fromStringAsVer20160323(\"SELECT * FROM 'device/+/data'\"),\n  actions: [\n    new actions.StepFunctionsStateMachineAction(stateMachine),\n  ],\n});",
        "custom": {
          "exampleMetadata": "infused"
        }
      },
      "fqn": "@aws-cdk/aws-iot-actions-alpha.StepFunctionsStateMachineAction",
      "initializer": {
        "docs": {
          "stability": "experimental"
        },
        "locationInModule": {
          "filename": "lib/step-functions-state-machine-action.ts",
          "line": 34
        },
        "parameters": [
          {
            "docs": {
              "summary": "The Step Functions Start Machine which shoud be executed."
            },
            "name": "stateMachine",
            "type": {
              "fqn": "aws-cdk-lib.aws_stepfunctions.IStateMachine"
            }
          },
          {
            "docs": {
              "summary": "Optional properties to not use default."
            },
            "name": "props",
            "optional": true,
            "type": {
              "fqn": "@aws-cdk/aws-iot-actions-alpha.StepFunctionsStateMachineActionProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/aws-iot-alpha.IAction"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/step-functions-state-machine-action.ts",
        "line": 26
      },
      "name": "StepFunctionsStateMachineAction",
      "symbolId": "lib/step-functions-state-machine-action:StepFunctionsStateMachineAction"
    },
    "@aws-cdk/aws-iot-actions-alpha.StepFunctionsStateMachineActionProps": {
      "assembly": "@aws-cdk/aws-iot-actions-alpha",
      "datatype": true,
      "docs": {
        "stability": "experimental",
        "summary": "Configuration properties of an action for the Step Functions State Machine.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as iot_actions_alpha from '@aws-cdk/aws-iot-actions-alpha';\nimport { aws_iam as iam } from 'aws-cdk-lib';\n\ndeclare const role: iam.Role;\nconst stepFunctionsStateMachineActionProps: iot_actions_alpha.StepFunctionsStateMachineActionProps = {\n  executionNamePrefix: 'executionNamePrefix',\n  role: role,\n};",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-iot-actions-alpha.StepFunctionsStateMachineActionProps",
      "interfaces": [
        "@aws-cdk/aws-iot-actions-alpha.CommonActionProps"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/step-functions-state-machine-action.ts",
        "line": 11
      },
      "name": "StepFunctionsStateMachineActionProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": ": None - Step Functions creates a unique name for each state machine execution if one is not provided.",
            "remarks": "The name given to the state machine execution consists of this prefix followed by a UUID. Step Functions creates a unique name for each state machine execution if one is not provided.",
            "see": "https://docs.aws.amazon.com/iot/latest/developerguide/stepfunctions-rule-action.html#stepfunctions-rule-action-parameters",
            "stability": "experimental",
            "summary": "Name of the state machine execution prefix."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/step-functions-state-machine-action.ts",
            "line": 20
          },
          "name": "executionNamePrefix",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/step-functions-state-machine-action:StepFunctionsStateMachineActionProps"
    }
  },
  "version": "2.130.0-alpha.0",
  "fingerprint": "**********"
}